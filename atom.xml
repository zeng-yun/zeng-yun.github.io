<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[万世奇的博客]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-10-22T14:47:17.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[万世奇]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[讲个故事]]></title>
    <link href="http://yoursite.com/2016/10/22/passage4/"/>
    <id>http://yoursite.com/2016/10/22/passage4/</id>
    <published>2016-10-21T16:00:00.000Z</published>
    <updated>2016-10-22T14:47:17.000Z</updated>
    <content type="html"><![CDATA[<p>突然觉得，努力程度的重要性相比起决策来说显得微不足道的多了。好久没更博客，这次我就来讲个小故事吧。<br><a id="more"></a></p>
<p>HSC是我好朋友，初高中都和我在二中念书。他爸妈和我爸妈也是同事，而他家就在我家楼上，所以我们关系很好，经常一起玩细胞分裂和刺客信条。论游戏，他玩的比我好那么一点点。而论成绩，我比他好那么一点点。从初中到高中，我们是竞争对手，每次考试都互相比较，而我的总分总是比他高那么个几十分。高二的时候，他不上学了，开始考SAT与TOFLE申请美国留学，他爸妈和我爸妈交流之后，我妈也鼓励我出国，可是我爸说出国没什么含金量，认为海归不吃香，再考虑到高学费，他不太同意我出国。我那时相信我爸，觉得他出国只是为了逃避高考，于是我不受他的影响，一心一意准备高考。高三之后，我去了世界排名400多的华科，而他申请上了好几所常青藤名校，最后选择了学费稍便宜一些的伯克利，世界排名第3。</p>
<p>今天我妈去买菜的时候碰见HSC的妈妈了，他妈妈说，HSC在美国不打算回来了，现在他大四就已经找到高薪的工作了，伯克利毕业再加上学的是计算机与统计相关的专业，在美国很容易找工作。大学他也找到了女朋友，他俩一起拿绿卡决定两个人在美国定居生活下去。虽然他也想读研究生，但他和女朋友都决定自己先工作两年再读，想用自己赚的钱交学费。</p>
<p>论努力程度，我并不比他低，初高中就有好好读书，在大学也没有怎么放松，成绩加权在87以上，也拿过奖学金和一些奖项，也有在各种公司实习，可是我和他的差距仍在不断加大，因为当他接触到世界前沿的知识和技能的时候，我还在赶混学分写没有任何价值的报告，当他在实验室里做研究的时候，我还在忍受拔草、思政、马原以及上那种连骑自行车都要麻烦学生帮他骑的某老师的课。这种差距其实在高二就决定了，当他决定出国而我决心高考的那一瞬间，就决定了这种差距，就好比他走上了手扶电梯而我走了楼梯，我们都很努力都在不断的前进，但是差距在我们走上不同道路的一瞬间就已经注定了。</p>
<p>想起初中的时候，我妈说要买房，觉得房子能保值而钱在贬值。我爸不同意，觉得买房还不如炒股赚钱，把钱往股市里投，结果房价暴涨股市崩盘，结果是我妈不用努力，房子不仅增值5倍还能每月赚租金，而我爸努力的像条狗，最好的结果是亏得少一点。这种差距仅仅就在决策的瞬间就注定了，就像我选择高考他决心出国一样。大学之后我高中同学很早就在考TOFLE和IELTS，我不以为然觉得出国没用，于是他们很早就拿到offer而我现在还在考雅思。大三暑假才决心要出国的我已经没时间准备GRE和TOFLE失去了留学美国的机会，再加上英国难留的政策很可能毕业就得回来。这些都和努力程度无关，都在于眼界和决策，换句话说是这些决策决定了今后努力程度的权重，有的人做了决策后降低了努力程度的权重，不需要多努力就能取得好结果，而有的人做了决策后增加了努力程度的权重，所以努力的像条狗都不能望其项背。</p>
<p>所以努力程度是什么？</p>
<p>是无用功的堆砌程度。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>突然觉得，努力程度的重要性相比起决策来说显得微不足道的多了。好久没更博客，这次我就来讲个小故事吧。<br>]]>
    
    </summary>
    
      <category term="文集" scheme="http://yoursite.com/tags/%E6%96%87%E9%9B%86/"/>
    
      <category term="文集" scheme="http://yoursite.com/categories/%E6%96%87%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[为什么青少年爱用QQ，中老年人爱用微信]]></title>
    <link href="http://yoursite.com/2016/01/01/product5/"/>
    <id>http://yoursite.com/2016/01/01/product5/</id>
    <published>2015-12-31T16:00:00.000Z</published>
    <updated>2015-12-31T22:31:35.000Z</updated>
    <content type="html"><![CDATA[<p>青少年更爱用QQ，而中老年人更爱用微信，这是一个普遍趋势了，当我们看自己的父母把微信玩的爱不释手的时候，却发现我们的表弟表妹侄儿侄女们更倾向于用QQ，知乎里有许多人都对这个问题谈了自己的看法，而我想从产品层面来分析一下这个问题，总的来说，我觉得主要是使用门槛、关系链、用户心理、使用场景这四大原因。<br><a id="more"></a></p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product5-1.png" alt=""></p>
<h5 id="使用门槛">使用门槛</h5><p>简单来说，我认为微信对于中老年人来说门槛是很低的，而对于青少年来说门槛太高了，QQ则恰好相反。我想很多人要质疑我了，微信那么简单好用，对于最爱把玩APP的年轻人还会有门槛？你在逗我吧？嗯，确实是，不过这个门槛不在于APP是否易用，关键在于-手机号。</p>
<p>我想问问，你是多大拥有自己第一部手机的？15岁？17岁？比较晚了吧，而5.0版本以上的微信，在注册环节都是必须要绑定手机号的，对于13岁以下的儿童，大多数是没有自己专属的手机的，所以他们没办法拥有微信账号，这就直接造成了他们转而使用门槛更低的QQ。我想有人还是不满意，他们说现在都什么时代了，00后的小学生都有手机了好吗，别拿你们90后的时代来看现在的孩子。好，那我再问一个问题，你仔细观察那些拥有手机的孩子，他们真正打电话的时间多吗？打电话的对象除去他爸妈之外，还剩几个？我想是不多的，因为家长之所以给他配备手机，是为了让他方便联系自己，而拥有手机的儿童此时还没有构建自己的手机通讯圈，因为很可能他的同伴还没有手机，所以他的手机通讯圈是不完整的，所以当他要联系班上一个同学时，却发现那个同学还没有手机，更不会有微信，因而他们会使用QQ进行联系。还不光如此，你再想想，你从第一次拥有手机到现在，手机号换过几次了？我想应该不少于3次吧，也就是说，对于那些拥有手机的孩子来说，手机号随着成长在不断变动，而变动的号码也不利于微信绑定，因此综合上述3点来看，相比微信，QQ才是对于青少年来说门槛更低的APP。</p>
<p>再来看看中老年人，微信对于这些手机号大概已经固定下来的中老年人来说，门槛比QQ低太多了，我不多说，你就回去教自己的爸爸妈妈爷爷奶奶把QQ注册一遍，然后教教他们怎么使用，你就会强烈的感受到一件事-尼玛教不会啊！什么QQ号啊，加好友啊，发说说啊，转发啊，上传照片啊，个性名片啊，气泡啊，主题啊，装扮啊，抽屉式导航啊，这些对于他们来说太复杂了，不说别的，就只说QQ号，如果不是使用QQ的早期中老年用户，对于现在刚注册QQ的中老年人，你看他得花多久记住他那个QQ号。但是微信完全没有上述这些问题，一个手机号，OK注册搞定了，再教教朋友圈，订阅号，发消息，就OK了，简单易学，对于中老年用户门槛很低。而QQ上述这些复杂的部分对于青少年来说完全不是门槛，相反他们乐于这些复杂的部分。所以综合来说，相比QQ，微信才是对于中老年人来说门槛更低的APP。</p>
<h5 id="关系链">关系链</h5><p>上述的使用门槛讲了青少年为何大多首选是QQ，而中老年人首选会是微信。而除此之外，我还发现了一个现象，就是青少年慢慢成长的过程，有一部分会渐渐从QQ转向微信，慢慢成了微信的忠实用户，这是为什么呢？这里我想从关系链的角度来谈一下。</p>
<p>对于刚使用QQ的青少年来说，他QQ的圈子是很纯净的，从小学到初中再到高中，QQ沉淀下来的关系大多都是同学，没有那些杂七杂八的人，但是当他们进入大学，走入社会，QQ里可能就混进了各种各样的人，比如各种社团各种组织各种圈子，以及各种只有一面之缘的人，而这时的他们若选择微信的话，则可以帮助他进行二次筛选，也就是从手机通讯录以及QQ好友中选择一部分进行添加，从而再次保证了关系的纯净。比如我就是这样的，我的微信好友个数远远少于QQ好友，我只选择了那些自己喜欢的，关系不错的人进行了添加，保证了整个微信圈的纯净。</p>
<p>而对于中老年人来说，他们用了很久手机了，大多数的关系都存在了手机的通讯录里，而注册环节强制绑定手机号的微信对于他们来说，可以百分百的加到也注册了微信的通讯录好友，从而保证了关系链的延续。</p>
<h5 id="用户心理">用户心理</h5><p>所谓人无中二枉少年，我认为QQ产品属性中有很大一部分契合了青少年的这种心理，简单来说就三个字-个性化。</p>
<p>打开QQ，有个性名片，气泡，主题，字体，挂件，空间装扮，红橙黄绿青蓝紫钻，而微信呢，除了个相册封面，表情，就没了。而中老年人早就过了中二期，对QQ里的这些玩意儿是没啥兴趣的，但青少年就不一样了，青少年想要什么？独特，有个性，觉得自己倍儿牛掰，其他人都是渣渣，QQ里这些东西大大契合了青少年的这种心理，特别是对于那些中二期的中二少年来说，杀伤力极大，所以导致他们即使能用微信，也很可能会选择QQ。</p>
<p>而且QQ的娱乐属性比较强，比如QQ空间有个玩法叫跟队形，这个在微信可能不太玩的了，但这个对于追求娱乐只求好玩的青少年来说是很棒的彩蛋，而更追求私密性的微信对于这些青少年而言可能会显得比较没劲。</p>
<h5 id="使用场景">使用场景</h5><p>QQ是从PC走出来的产品，而微信是移动端的产品，这个差别直接导致了使用场景的不同，总的来说，QQ更符合青少年的使用场景，微信则更符合中老年人的使用场景。</p>
<p>青少年一般爱说的是什么？“妈妈我能玩会儿电脑吗？”哈哈对，他们咋没说“妈妈我能玩会儿手机吗？”，因为电脑的娱乐对于青少年来说，比手机的娱乐更大，因此用电脑联系彼此对于他们来说是很常见的使用场景。举个例子，青少年约着一起开黑打LOL，他们会用微信联系吗？肯定不会啊，已经在电脑跟前的他们肯定会用PC的QQ来联系，还能随时建讨论组商讨战术，这是很符合他们的使用场景的。不光如此，学生党的青少年们还会拥有各种QQ群，比如我就有大学班群，高中班群，各种作业小组群，以及大学的一些课堂群。假如大学班群要发一个公告，就可以使用QQ群的群公告功能，很符合场景，而用微信群发公告则很可能被淹没在众多的信息中，这就不符合场景了。并且，QQ群还有个群文件功能，这个是非常符合学生党的使用场景的，比如我大学班群要发一个电子档文件要我们填，基于移动端的微信是不适合文件的存储与传输的，而QQ的群文件就太符合这个场景了，直接上传到群文件，每个人下载下来填就好了。再比如某个小组作业群要协作完成某个课程设计，或者某课堂群要用群文件共享课件，这之间就肯定要涉及文件的存储与传输，这些都太符合QQ群文件这个场景了。而且据我所知，QQ现在还有班级群作业功能，可以远程布置作业，我想这个一定是QQ的产品经理察觉到QQ用户中学生党基数之大，然后针对这部分用户做了这么一个布置作业的功能，难怪这么符合他们的使用场景。</p>
<p>而微信则很符合中老年人的使用场景，当不了解一个用户群的时候，你永远不知道他们竟然会这样使用产品，可以说，中老年人使用微信的方式和我们是很不一样的，中老年用户会使用手写输入，他们觉得打字太麻烦了，手写才是他们觉得最直观的输入方式，而且他们很多都会使用语音，因为对他们来说这样更快，而且对于眼睛不太好的中老年人，他们的微信字号是被放大了的，这些很可能都是我们没想到的，但是微信想到了，所以先推出语音，字号设置层级更浅的微信一下获得了很大基数的中老年用户，而从PC走出来的QQ则无法做到这一点。而且一些中老年人因为儿女不在身边，希望可以和儿女视频聊天，微信完全符合这个使用场景，虽说QQ也可以视频，但移动端QQ由于门槛问题不会是他们的首选，而对于不太会用电脑的中老年人，使用PC版QQ视频的门槛太高，而微信简单易用只需点三下就搞定，这些都显示出微信很符合中老年人的使用场景。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>青少年更爱用QQ，而中老年人更爱用微信，这是一个普遍趋势了，当我们看自己的父母把微信玩的爱不释手的时候，却发现我们的表弟表妹侄儿侄女们更倾向于用QQ，知乎里有许多人都对这个问题谈了自己的看法，而我想从产品层面来分析一下这个问题，总的来说，我觉得主要是使用门槛、关系链、用户心理、使用场景这四大原因。<br>]]>
    
    </summary>
    
      <category term="产品" scheme="http://yoursite.com/tags/%E4%BA%A7%E5%93%81/"/>
    
      <category term="产品" scheme="http://yoursite.com/categories/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端实现登录注册与文集展示]]></title>
    <link href="http://yoursite.com/2015/12/24/javascript3/"/>
    <id>http://yoursite.com/2015/12/24/javascript3/</id>
    <published>2015-12-23T16:00:00.000Z</published>
    <updated>2015-12-16T15:25:42.000Z</updated>
    <content type="html"><![CDATA[<p>最近在忙网页设计的结课作业，是要求实现一个登录注册和查看文章的功能，我就还是利用了CodyHouce的素材，具体的修改部分就不加赘述了，这里主要在博客里推荐几个在做的过程中发现的好素材，一个是素材库<a href="https://codyhouse.co" target="_blank" rel="external">CodyHouce</a>，还有一个是美化alert弹窗的<a href="http://www.dglives.com/demo/sweetalert-master/example/" target="_blank" rel="external">SweetAlert</a>，可以在GitHub下载它的<a href="https://github.com/t4t5/sweetalert" target="_blank" rel="external">源码</a>，而我实现后的代码也上传到自己的<a href="https://github.com/ursocute/husters" target="_blank" rel="external">GitHub</a>里了，当然大家也可以直接点击<a href="https://ursocute.github.io/husters/login/index.html#0" target="_blank" rel="external">登陆注册页</a>和<a href="https://ursocute.github.io/husters/forum/index.html#0" target="_blank" rel="external">文集展示页</a>来查看这两个页面。<a id="more"></a>不过要提一下的是，文集展示里的文章并不是我写的，我只是为了凑字就在百度贴吧的华科吧里复制了几个热门帖子里的文字，所以我对文字部分并不负责哦，要是想吐槽文字部分的话，请移步百度贴吧华科吧。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近在忙网页设计的结课作业，是要求实现一个登录注册和查看文章的功能，我就还是利用了CodyHouce的素材，具体的修改部分就不加赘述了，这里主要在博客里推荐几个在做的过程中发现的好素材，一个是素材库<a href="https://codyhouse.co">CodyHouce</a>，还有一个是美化alert弹窗的<a href="http://www.dglives.com/demo/sweetalert-master/example/">SweetAlert</a>，可以在GitHub下载它的<a href="https://github.com/t4t5/sweetalert">源码</a>，而我实现后的代码也上传到自己的<a href="https://github.com/ursocute/husters">GitHub</a>里了，当然大家也可以直接点击<a href="https://ursocute.github.io/husters/login/index.html#0">登陆注册页</a>和<a href="https://ursocute.github.io/husters/forum/index.html#0">文集展示页</a>来查看这两个页面。]]>
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我想要真物]]></title>
    <link href="http://yoursite.com/2015/12/22/passage3/"/>
    <id>http://yoursite.com/2015/12/22/passage3/</id>
    <published>2015-12-21T16:00:00.000Z</published>
    <updated>2015-12-13T14:58:33.000Z</updated>
    <content type="html"><![CDATA[<p>最近重温了大老师系列的一二季，番剧里的各种人物的交织和现实生活中的人际关系是何等的相似，这个故事里并没有什么反派，每个人都是温柔而正确的孩子，而正是这群温柔而正确的孩子，在用温柔而正确的方式去维持着伪物的关系，故事里的每个人都渴望着真实，但每个人的真实是不同的，无法用来沟通，所以人们欺瞒着自己而选择了伪物，正如现实中我们一样。<br><a id="more"></a></p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/passage3-1.png" alt=""></p>
<p>这个世界既不温柔，也不正确，它有着太多的伪物。表面和睦的家庭聚餐却成了既定节日里各种亲戚炫耀卖弄的特定场合，一堆亲戚打着“关心你”的口号来催你恋爱，催你工作，问你工资与年收，背后隐藏着的不过是“看到你过得不好，我也就放心了”的优越感。父母以“为你好”为借口，要你找门当户对的对象，选择他们认为稳定的工作，走他们认为正确的道路，不过是让你完成他们期望的事情，迎合他们期望罢了，为了父母的赞许努力学习，为了集体的认同成群结伴，为了亲友的压力结婚成家，到老来依旧要在儿女之间辗转腾挪，唯唯诺诺的究此一生，在我们在迎合他人期望的时候，自然而然的也萌生了对他人的期望，自此期望与期望蔓延缠绕，纺织成网，而在之中喘息的我们，不过是被它们所驱使的表象，所谓伪物。</p>
<p>大学里同样如此。才刚认识就开始么么哒，明明不喜欢对方，但为了维持恋爱关系而说些不走心的话，虽说你我都知道不是真正的喜欢对方，但谁也不揭穿的在一起过着，是伪物。有些大学同寝室的女生，她们手挽着手齐步走，看似和谐友爱，而事实上其实她们有高有矮，高个子只顾大步向前，矮个子只能勉强自己跟上她们的脚步，她们看似和谐，却为了争夺奖学金或保研出国等机会而相互嫉妒和争斗，是伪物。有时你加了一个群，平时总爱和群里的小伙伴嘻嘻哈哈，但是有一天你忽然不小心退出了这个群，结果没有一个人关心你为什么退群。你想起那些朋友，平时聊天的时候恨不得掏心掏窝，退群居然没有一个人来关心自己，很气恼，但是回过头想，那群里之前也有小伙伴一声不响地退群，自己也从未过问。究其本质，你跟他们的关系就是构建在一种虚假的和平上，是伪物，不过是为了迎合气氛而说些不走心的话，其实从心底里，我们根本没有真正关注过对方。</p>
<p>临近毕业，每个人都有每个人的事情，有时长时间忙于自己的事情，再回过头看周围的同学，却发现自己已和他们渐渐产生了些许距离，是自己走的太快或是我没有跟上他们脚步，反思难道要停下脚步才能维持所谓的关系？看谁的脸色，讨谁的欢心，保持联络，迎合话题，不得不做那么多才能维系的友情，那种东西根本就不是友情。如果那么繁琐的东西才能被称为友情的话，我根本就不需要，因为靠这种无聊的交流而装作很快乐的行为不过是自我满足，那不过是欺瞒，不值得为之停下脚步。</p>
<p>所谓孤独并不是指人口密度，而是指人的精神层面，就算别人离你再近，要是不能感觉和自己是同一种人，那么你我是一样的孤独。也许是在一个全是女生的学院呆久了，就见过这样形形色色的女生，有些刚开始接触的时候并不察觉，而静下来细细思考，就会感觉到不适。我认为，一个人是出于某种目的去做一件事还是单纯的做一件事是看得出来的，虽然都是做同一件事，但有目的性的会让人感觉哪里不对，哪里不舒服，会觉得难受，就像和某些说话滴水不漏，懂人心，很会做作的女生相处一样，会觉得很无趣，维持着并不真实而互相做作的关系，非常的无趣。</p>
<p>朋友圈里常有这类人，他们永无止境的晒着各类玩耍的图片，让我们误以为他们的生活非常充实，而在我看来却满是伪物，因为一个人一生中最需要共处的其实是我们自己，如果一个人永远只能靠聚会和玩闹来寄托情感的话，他的内心一定是空虚的，因为一旦他静下来，就会感到空虚寂寞，只能靠一次又一次聚会来派遣，就好比酒吧里灯红酒绿的觥筹交错一般虚伪可笑。所以我更欣赏能独处的人，能够与自己相处，能在一个人的时候去阅读，去寻找自己的爱好，这样的人的内心才可谓充实，因为他在我看来是一本书，是一本我永远读不完的书，而我想要的正是这样一本书。</p>
<p>所以，我想要真物。所谓真物也许只是一种妄想，因为这世上并不存在永恒不会改变的幸福，任何关系都会随着时间渐渐流失，即使双方都想要理解，但由于人心的不同，不可能做到彻底的相互理解。但我想要的绝不是友好相处，相互融洽这些应气氛而生的伪物，而是即使不能被理解，也想要理解对方的关系，如果彼此都怀着真实的愿望去想要理解的话，即使不能完全理解，也能因相互怀揣着的真实而安下心来，也许这就是我想要的真物吧。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近重温了大老师系列的一二季，番剧里的各种人物的交织和现实生活中的人际关系是何等的相似，这个故事里并没有什么反派，每个人都是温柔而正确的孩子，而正是这群温柔而正确的孩子，在用温柔而正确的方式去维持着伪物的关系，故事里的每个人都渴望着真实，但每个人的真实是不同的，无法用来沟通，所以人们欺瞒着自己而选择了伪物，正如现实中我们一样。<br>]]>
    
    </summary>
    
      <category term="文集" scheme="http://yoursite.com/tags/%E6%96%87%E9%9B%86/"/>
    
      <category term="文集" scheme="http://yoursite.com/categories/%E6%96%87%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[交互设计有哪些原则]]></title>
    <link href="http://yoursite.com/2015/12/06/product4/"/>
    <id>http://yoursite.com/2015/12/06/product4/</id>
    <published>2015-12-05T16:00:00.000Z</published>
    <updated>2015-12-05T14:06:30.000Z</updated>
    <content type="html"><![CDATA[<p>之前在知乎回答了这个问题<a href="http://www.zhihu.com/question/19812118/answer/74616357" target="_blank" rel="external">「交互设计原则有哪些？」</a>，但因为时间缘故每一条都没细说，所以就想在博客里把每一条原则好好的解释一下，这些原则主要来自于唐纳德·诺曼的《设计心理学》以及<a href="http://zhuanlan.zhihu.com/uxcafe" target="_blank" rel="external">xidea的咖啡馆</a>，大家有兴趣的话也可以看看这本书以及xidea的知乎专栏。<br><a id="more"></a></p>
<h5 id="基于业务诉求和用户诉求">基于业务诉求和用户诉求</h5><p>业务诉求和用户诉求是分别针对企业和用户提出的，业务诉求就是为精确定位的目标用户提供什么核心价值，价值如何变现和实施，而用户诉求就是基于用户的需求，了解用户当前诉求和潜在诉求，并设计场景化的使用流程来满足需求。简单来说，其实就是要明确“我们为什么要做这个？”以及“用户为什么要用这个？”这两个问题，虽然交互设计师不需要对产品的商业价值与变现方式负责，但明确业务诉求和用户诉求相当于有了设计指导，这可以让设计师在设计的过程中不易迷失方向，还可以避免在设计时陷入一些小细节的纠结，基于业务诉求和用户诉求其实就是为了不忘初心，是为了明确设计的初衷。所以，在做交互设计之前，一定要问自己这两个问题：“这能给我们带来什么价值？”，“这能为用户提供什么价值？”，具体这三方是怎样相互影响的则可以参考下方的五导家方法论。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product4-1.png" alt="五导家方法论" title="五导家方法论"></p>
<h5 id="基于用户心理模型">基于用户心理模型</h5><p>基于用户的心理模型听起来比较抽象，其实就是我们常说的情感化设计，这里拿微信举例就好理解了，微信的很多设计都基于用户的心理模型，比如退出群聊不会有提示，这个设计就基于了用户的心理，考虑了用户想退出群聊但又怕影响关系的焦虑心理，而微信这种设计则有效的缓解了在这种情况下用户的社交压力。微信在处理好友关系的时候也充分考虑了用户的心理，如果单向删了对方好友，可以绕过好友申请，不制造消息提醒，直接加回，也就是删好友的时候它怕你后悔，给了一条退路。而被删的时候，它怕你伤心，不告诉你，让你自己去发现。拉黑别人的时候微信怕你后悔，让你可以在设置-隐私-黑名单中找到对方，再次添加好友还能保留原有的聊天记录，没有任何影响，而被拉黑的时候微信怕你伤心，也不告诉你，只有在发信息的时候才会显示拒收字样，这些细节的设计都考虑到各个场景下用户的心理，怕你后悔则给了你退路，怕你伤心则不主动告诉你，概括的来说就是基于用户心理模型来设计。</p>
<h5 id="形式追随功能">形式追随功能</h5><p>要解释形式追随功能，要先从设计的本质说起，大多数人并不了解设计的作用，总觉得设计就是美工，就是为了美观好看，然而事实上，设计是为了解决问题，设计是有目的性的，而形式追随功能的意义就在于，设计的目的性大于美观性。</p>
<p>比如OS X最小化的动效就是形式追随功能的设计，可以看出这个动效有一个收缩的效果，就好比整个程序窗口收进了一个小盒子里，用户一下就明白了这是最小化的含义，这个动效的目的是为了降低用户的学习成本，将动效以隐喻的形式告知用户发生了什么变化，让用户更好的理解系统的状态。我想有人就要质疑我了，他们说：“这个最小化谁不知道啊？降低什么学习成本啊？谁还需要学这个啊？”然而，你之所以觉得最小化很简单，是因为你已经熟悉了Windows系统，你可以试想一下，假如你是第一次使用Windows，点击最小化的按钮突然窗口就不见了，这时你心里一定是恐慌的，因为你不知道系统发生了什么变化，这点在年长的用户身上最能体现，他们总是害怕点错，陷入恐慌，不知所措，原因就是系统没有很好的让他们明白发生了什么变化，而设计的作用就体现出来了，OS X这个动效设计是为了降低学习成本，很好的告知用户发生了什么，这里的设计不纯粹为了美观，而是带有目的性的，这也是形式追随功能的体现。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product4-2.gif" alt="OS X最小化动效" title="OS X最小化动效"></p>
<h5 id="一致性">一致性</h5><p>一致性的本质是运用存储于外部世界和头脑中的知识，从而降低用户的学习成本，首先要说的是，知识大部分是存储于外部世界的，这点初看可能不太能接受，但其实是很好理解的，想一想，为什么人类会使用十进制呢？张开手指你发现了什么？对的，这和我们手指的个数是息息相关的，正因为人类是十根手指，所以我们的祖先才会用手指计数，进而发展为十进制，也就是说，人类的知识是来源于外部世界的，而人类通过理解和内化将知识以记忆的方式存储于自己的大脑中，而一致性正好就是利用了我们存储于外部世界和头脑中的知识，比如下拉刷新、滑动解锁，这些操作符合用户的操作习惯，极大地降低了用户的学习成本，再比如一些移动App的icon，聊天的icon是一个对话框，联系人的icon是一个人像轮廓的描边，通话的icon是一个话筒，这些都是运用了我们存储于头脑中的知识，以提示的形式来告诉我们它是什么，唤起我们头脑已有的记忆从而联想到icon代表的含义，从而让我们更易理解系统，再比如我比较喜欢的一款iOS应用<a href="https://itunes.apple.com/cn/app/quest-ti-sheng-ni-sheng-huo/id947440899?mt=8&amp;uo=4" target="_blank" rel="external">Quest</a>，就全部采用了下拉添加任务，下拉添加分类的交互设计，保持了整体的简洁易用，所以我认为一致性设计的本质就是运用存储于外部世界和头脑中的知识，再往简单里说，就是要一定程度的遵守设计规范，保持产品设计各个元素间的一致。所以这里提供一篇<a href="http://isux.tencent.com/ios9-guideline-ch1.html" target="_blank" rel="external">iOS设计规范</a>，大家可以收藏起来看看。</p>
<h5 id="Less_is_more">Less is more</h5><p>Less is more的设计原则已经被提得太多了，不过这里我有一些补充，我觉得Less is more中的Less代表的不是页面少，也不是元素少，更不是流程少，它代表的应该是认知负担少，我见过有一个原则说，一个网站中，用户找到他想要的信息应该只用点击3次，而我觉得这里的关键不在于点击次数，而在于用户每次点击所花的代价，说到底，就是用户的认知负担的多少。举个例子，足记的图片发布分为3步，第一步裁剪，第二部加字幕、滤镜、调色，最后一步再发布，但如果想页面更Less的话，完全可以变成一个页面，就在一个页面裁剪、加字幕、点击发布，把页面弄成像Photoshop那样，可是假如真这样做的话页面是变Less了，但是用户的认知负担就增加了，因为用户得处理页面海量的信息，“我先要做什么？”、“再干什么？”、“这么多按钮里哪一个是裁剪？哪一个是加字幕？”，用户就会表现得像许多人第一次打开Photoshop的时候那样，对左侧众多不认识的工具栏感到陌生和恐慌。而足记把发布流程变为3步，虽然页面变多了，但是用户的认知负担大幅降低，用户完全知道这个页面是裁剪，下一个页面是加字幕，最后发布，不会对整个流程顺序感到困惑。所以这也是我想说的Less is more的真实含义，Less既不是页面少，也不是元素少，更不是流程少，它代表的应该是认知负担少。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product4-3.png" alt="足记图片发布流程" title="足记图片发布流程"></p>
<h5 id="可视性">可视性</h5><p>可视性也就是指正确的操作部位必须显而易见，而且还要向用户传达出正确的信息，这一点我觉得其实是在保证设计模式、系统表象、用户模式的重合，这个重合度越高，那么就越可视，越好用。设计模式是对于设计人员来说的，设计人员设计产品的时候，头脑中是有一个关于想象中产品的模式的，我们叫它设计模式。而产品实际做出来后的系统表象和设计人员想象中的设计模式是存在一定差异的，而对于用户来说，这个差异就更大了，因为用户会按照自己的方式理解系统，我们叫它用户模式。而系统如果不可视的话，用户理解的用户模式则会和系统表象存在很大差异，和设计模式就差得更远了。而如果用户并不能按照实际的系统表象去理解产品，而仅凭自身经验去理解为自己的用户模式，这样的话则很容易导致误操作，所以用研方法里有一个卡片分类法，我觉得就是在探究用户模式和系统表象的重合度，通过让用户分类卡片来理解用户头脑中的用户模式是什么样的，从而分析这个偏差值进行改进与迭代。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product4-4.png" alt="三种模式" title="三种模式"></p>
<h5 id="建立正确且自然的匹配关系">建立正确且自然的匹配关系</h5><p>建立正确且自然的匹配关系其实就是指两种匹配，用户目的和行为的匹配，以及用户行为和效果的匹配，这里举个简单的例子，我想大家都遇到过电视遥控器按错键的情况，那到底为什么会按错呢？很大程度就是因为遥控器这个产品没有建立正确且自然的匹配关系，也就是用户目的和行为不匹配，导致了行为和结果的不匹配，比如下图这款遥控器，没错，就是我家的遥控器，我家这款遥控器下方的圆圈式按钮很容易让人误解为音量和频道的调节，而真正调节音量和频道的是上方那个小按钮，所以有客人来我家用这款遥控器的时候经常按成下方的错误按钮，更可怕的是下方的圆圈式按钮是节目信息的快进快退，所以客人点了之后画面变成了菜单式跳跃式的画面，客人一看就吓坏了，以为不小心酿成大祸，又手忙脚乱的在遥控器上找返回和退出，所以这就是一个很典型的用户目的和行为的不匹配，导致行为和结果不匹配的例子。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product4-5.jpg" alt="我家遥控器" title="我家遥控器"></p>
<h5 id="增加反馈与限制">增加反馈与限制</h5><p>增加反馈与限制是为了及时告知系统状态，限制用户则是从根本上杜绝某些错误的发生，简单的说就是，避免用户犯错和不给用户犯错的机会。比如京东的注册页面，用户名已被使用的话会及时弹出提示，密码过于简单或密码重输不一致都会及时提示，这就是在增加反馈来避免用户犯错，并且反馈非常及时，不是在点击注册之后才告知哪有问题，也不是在用户刚开始输入时就显示有问题，而是在用户填完某个输入框开始填下一个输入框时，系统才会检查上一个输入框的合法性，也就是说，增加反馈是必要的，但反馈本身不应该成为体验的阻碍。再谈限制，许多游戏里都有边界限制，比如不能进入水中，有些房屋可以进有些不能进，这些限制都是为了告知系统的局限性，且不给用户犯错的机会，假如系统不增加这些限制，那玩家进入水中则可能触发某些bug，所以增加限制就直接杜绝了错误发生的可能，因此我认为从某种程度上来说，限制比反馈更能防止用户误操作。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product4-6.png" alt="京东注册页面" title="京东注册页面"></p>
<h5 id="不打断任务流">不打断任务流</h5><p>考虑流程的各种情况，不让用户在任务流中返回退出。这一点其实就是对于场景和流程的全面考虑，这里拿QQ和微信来举例对比一下就很清楚了，首先看看用QQ发说说的权限设置。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product4-7.png" alt="QQ发说说的权限设置" title="QQ发说说的权限设置"></p>
<p>用QQ发说说的时候可以选择“谁能看见”，然后就可以勾选相应的分组，或进入某个分组查看分组里具体有哪些人。可是，如果用户此时只想对某个分组里一部分人可见，或者发现有些好友分组错了，这个时候用户就得退出说说的界面，把分组重新调整一番再来发说说，这就打断了用户的任务流，体验很不好。所以，我们看看微信是怎么做的吧。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product4-8.png" alt="微信发朋友圈的权限设置" title="微信发朋友圈的权限设置"></p>
<p>微信发朋友圈也可以设置权限，选择“谁可以看”就进入了选择部分，这个时候要是用户发现某个标签漏加了一个人，或者想临时把谁从某个标签里去掉，就可以直接点击“编辑标签”，对相应的标签直接进行操作，这样用户就不用退出发朋友圈的任务流，编辑好了直接返回发送即可，整个流程一气呵成十分顺畅，这点上体验比QQ好得多，所以，在场景化设计的时候一定要考虑当前场景下发生的各种情况，做到不打断用户的任务流。</p>
<h5 id="自动化">自动化</h5><p>自动化是指在不夺走控制权的情况下自动化系统操作，甚至是具有预见性的操作。产品设计有一个观念，就是把复杂的事情交给系统，自动化就可以很好的体现出这一点。现在很多App都有了夜间模式，但是我观察发现，基本上所有具备夜间模式的App在设置成夜间模式后，都必须要用户手动调节回来，我觉得这就并不符合自动化，既然用户在白天一定会调节回来，为什么APP不设置一个时间来监测白天还是夜晚，或者通过手机本身的光传感器来判断，自动的调节回普通模式呢？再比如，如果大家喜欢下五子棋的话，可能会有这样一种情况，就是一方达到4子后自动帮对手堵上然后接着下，为什么他会直接帮对方下而对方也没有怨言呢？这是因为对手看到他4子了肯定会堵上，否则就输了，那么我都知道他要下哪里我何不直接帮他堵上呢，还快捷一些，特别是对于上学时用纸当棋盘笔当棋子的学生来说，这样直接帮对方下了更能节省时间，好能在课间多下一局，我觉得这和预见性的自动化是一个道理，再来看看QQ里这一个设计。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product4-9.gif" alt="QQ图片浏览设置" title="QQ图片浏览设置"></p>
<p>单看这个可能大家还不明白，其实很简单，也就是在点击了“空间动态图片浏览设置”之后进入设置页面，用户点击大图浏览后，QQ就自动返回上级页面了。一般情况都是用户点击左上角的“返回”再返回上级页面，而QQ这个细节设计就是自动化的体现，既然用户已经选择了图片浏览的质量，那么用户肯定是准备返回上级了，那么，既然知道用户现在要返回，为何系统不自动返回上级页面呢？这个小细节的设计就是提前预见用户的操作，然后对其进行预见性的自动化操作，这一点在我之前的<a href="http://ursocute.github.io/2015/10/30/Ixd6/" target="_blank" rel="external">wecoo交互设计作品集</a>中也有体现，<a href="http://ursocute.github.io/wecoo/wecoo2/iphone5s.html" target="_blank" rel="external">wecoo原型</a>的意见反馈部分，我设计的时候就做了预见性的自动化操作，和QQ中的图片浏览设置的处理是异曲同工的。把复杂和预见的事情自动化确实能提升体验，但要注意的就是，再自动化都不能夺走用户的控制权，一定要让用户去掌控，而不是系统来掌控，即使是无人驾驶技术也只是一定程度的自动化，并没有完全夺走用户的控制权，因为用户还得选择目的地，路线，停靠点等，所以自动化要善用，要在不夺走用户控制权的情况下自动化复杂和有预见性的系统操作。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前在知乎回答了这个问题<a href="http://www.zhihu.com/question/19812118/answer/74616357">「交互设计原则有哪些？」</a>，但因为时间缘故每一条都没细说，所以就想在博客里把每一条原则好好的解释一下，这些原则主要来自于唐纳德·诺曼的《设计心理学》以及<a href="http://zhuanlan.zhihu.com/uxcafe">xidea的咖啡馆</a>，大家有兴趣的话也可以看看这本书以及xidea的知乎专栏。<br>]]>
    
    </summary>
    
      <category term="交互" scheme="http://yoursite.com/tags/%E4%BA%A4%E4%BA%92/"/>
    
      <category term="产品" scheme="http://yoursite.com/tags/%E4%BA%A7%E5%93%81/"/>
    
      <category term="交互" scheme="http://yoursite.com/categories/%E4%BA%A4%E4%BA%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用CodyHouce做个人相册集和视频集]]></title>
    <link href="http://yoursite.com/2015/11/20/javascript2/"/>
    <id>http://yoursite.com/2015/11/20/javascript2/</id>
    <published>2015-11-19T16:00:00.000Z</published>
    <updated>2015-11-21T15:38:54.000Z</updated>
    <content type="html"><![CDATA[<p>最近发现了一个前端素材库<a href="https://codyhouse.co" target="_blank" rel="external">CodyHouce</a>，里面有大量HTML,CSS,JS的素材，每个效果都有Demo供预览和下载，于是我就利用了里面的两个素材，在其基础上做了个人的相册集和个人的视频集，并把其中一个的链接放在了博客的侧边栏里，也正好在博客里分享一下，有兴趣的话可以点击<a href="http://ursocute.github.io/wanshiqi-s-photo/wsqphoto/index.html#0" target="_blank" rel="external">万世奇的相册</a>和<a href="http://ursocute.github.io/wanshiqi-s-piano/index.html#0" target="_blank" rel="external">万世奇的钢琴曲作品集</a>进行观看。<br><a id="more"></a></p>
<p>虽说CodyHouce提供了大量HTML,CSS,JS的素材，但如果想要在其基础上进行修改的话，还是需要有一定的前端知识的，这里对于一些修改点也不多赘述，就说一下JS里一个比较重要的改动，因为我主要使用了<a href="https://codyhouse.co/gem/squeezebox-portfolio-template/" target="_blank" rel="external">Squeezebox Portfolio Template</a>这个素材，而这个素材里每个相册点击后都是弹出同一个div，如果不对JS进行修改的话，而无法做出不同相册对应不同图片的效果，改动也很简单，在<code>squeezebox-portfolio-template/js/main.js</code>中找到下述这段代码：</p>
<pre><code>projectsContainer.on(<span class="string">'click'</span>, <span class="string">'.cd-slider a'</span>, <span class="function"><span class="keyword">function</span><span class="params">(event)</span> </span>{
    <span class="keyword">var</span> mq = checkMQ();
    event.preventDefault();
    <span class="keyword">if</span>( $(<span class="keyword">this</span>).parent(<span class="string">'li'</span>).next(<span class="string">'li'</span>).<span class="keyword">is</span>(<span class="string">'.current'</span>) &amp;&amp; (mq == <span class="string">'desktop'</span>) ) {
        prevSides(projectsSlider);
    } <span class="keyword">else</span> <span class="keyword">if</span> ( $(<span class="keyword">this</span>).parent(<span class="string">'li'</span>).prev(<span class="string">'li'</span>).prev(<span class="string">'li'</span>).prev(<span class="string">'li'</span>).<span class="keyword">is</span>(<span class="string">'.current'</span>)  &amp;&amp; (mq == <span class="string">'desktop'</span>) ) {
        nextSides(projectsSlider);
    } <span class="keyword">else</span> {
        singleProjectContent.addClass(<span class="string">'is-visible'</span>);
    }
});
</code></pre><p>然后找到这段代码里的<code>singleProjectContent.addClass(&#39;is-visible&#39;)</code>，把它删掉，然后替换成下述这三行代码就OK了：</p>
<pre><code>var i = <span class="variable">$(</span>this).parent(<span class="string">'li'</span>).<span class="keyword">index</span>();
console.<span class="keyword">log</span>(i);
singleProjectContent.e<span class="string">q(i)</span>.addClass(<span class="string">'is-visible'</span>);
</code></pre><p>我还用到的一个素材是<a href="https://codyhouse.co/gem/animated-svg-image-slider/" target="_blank" rel="external">Animated SVG Image Slider</a>，这个素材修改起来没有太多要注意的地方，只是如果添加超过4张的图片时，需要将下述HTML代码中<code>id=&quot;cd-image-1&quot;</code>、<code>id=&quot;cd-changing-path-1&quot;</code>和<code>clip-path=&quot;url(#cd-image-1)&quot;</code>中的数字改为你的图片的序数，图片是第几张就改成几就好，一定要一并修改，否则切换效果就没有了。</p>
<pre><code><span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"visible"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"cd-svg-wrapper"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">svg</span> <span class="attribute">viewBox</span>=<span class="value">"0 0 1400 800"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">title</span>&gt;</span>Aimated SVG<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
            <span class="tag">&lt;<span class="title">defs</span>&gt;</span>
                <span class="tag">&lt;<span class="title">clipPath</span> <span class="attribute">id</span>=<span class="value">"cd-image-1"</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">path</span> <span class="attribute">id</span>=<span class="value">"cd-changing-path-1"</span> <span class="attribute">d</span>=<span class="value">"M1400,800H0V0h1399c0.6,0,1,0.4,1,1V800z"</span>/&gt;</span>
                <span class="tag">&lt;/<span class="title">clipPath</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">defs</span>&gt;</span>

            <span class="tag">&lt;<span class="title">image</span> <span class="attribute">height</span>=<span class="value">'800px'</span> <span class="attribute">width</span>=<span class="value">"1400px"</span> <span class="attribute">clip-path</span>=<span class="value">"url(#cd-image-1)"</span> <span class="attribute">xlink:href</span>=<span class="value">"img/img-1.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">image</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">svg</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span> <span class="comment">&lt;!-- .cd-svg-wrapper --&gt;</span>
<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
</code></pre><p>对源代码感兴趣的也可以点击查看我修改后的源码：<a href="https://github.com/ursocute/wanshiqi-s-photo" target="_blank" rel="external">相册集源码</a>、<a href="https://github.com/ursocute/wanshiqi-s-piano" target="_blank" rel="external">视频集源码</a>，由于我的方向并不是前端工程师，所以代码写的不规范的地方还请多指教。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近发现了一个前端素材库<a href="https://codyhouse.co">CodyHouce</a>，里面有大量HTML,CSS,JS的素材，每个效果都有Demo供预览和下载，于是我就利用了里面的两个素材，在其基础上做了个人的相册集和个人的视频集，并把其中一个的链接放在了博客的侧边栏里，也正好在博客里分享一下，有兴趣的话可以点击<a href="http://ursocute.github.io/wanshiqi-s-photo/wsqphoto/index.html#0">万世奇的相册</a>和<a href="http://ursocute.github.io/wanshiqi-s-piano/index.html#0">万世奇的钢琴曲作品集</a>进行观看。<br>]]>
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[后物欲时代的产品设计]]></title>
    <link href="http://yoursite.com/2015/11/12/product3/"/>
    <id>http://yoursite.com/2015/11/12/product3/</id>
    <published>2015-11-11T16:00:00.000Z</published>
    <updated>2015-12-03T12:02:31.000Z</updated>
    <content type="html"><![CDATA[<p>最近读了郑也夫著作的《后物欲时代的来临》，这是一本关于人类社会的书，虽说只有短短十二章，但却解释了人类需求、消费实质、广告原罪、物质崇拜、工作与娱乐等多种社会现象，特别是其中探讨的人类需求实质对于产品设计也有很大的指导性，其中对于消费门槛的叙述在某种程度上也反映了用户体验的实质，因此，我就把对于这本书的思考转移到产品设计上，写成了这篇文章。<br><a id="more"></a></p>
<p>首先我想探讨需求的实质，马斯洛需求层次理论将人类需求按阶梯一样从低到高分为了5种，分别是：生理需求、安全需求、社交需求、尊重需求和自我实现需求。而其理论核心的在于需求层次的上移，当低层次的需求满足之后，人们会开始追寻更高层次的需求，这种需求层次的上移也意味着产品的可持续性，当产品能不断满足用户的需求转移时产品才能可发展。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product3-1.png" alt="马斯洛需求层次理论" title="马斯洛需求层次理论"></p>
<p>而郑也夫对于需求的探讨和马斯洛需求层次理论却有不同，郑也夫将人类的本质需求概括为3点：追求舒适，追求牛逼，追求刺激。这3点乍看比较粗浅，事实上绝不是那么简单的。追求舒适即人类对排除生理上的痛苦的追求，消解饥饿、寒冷、性欲等，这也解释了很多产品的成功，陌陌和Bled的兴起不外乎满足了排解寂寞的核心需求。而追求牛逼则概括了马斯洛需求层次理论中社交需求、尊重需求、自我实现需求这3点，牛逼这个并不大雅的词实际上对应了动物的性崇拜和性炫耀，雄孔雀以开屏求偶，尾巴越大越能吸引雌性，公鸡用争斗和鸣叫来争夺交配权，而由哺乳动物进化而来的人同样不能免俗，只是人类的行为更加复杂，由性崇拜和性炫耀发展而来就有了对地位的追求，对身份认同的追求，而本质上就是追求牛逼，而我认为，追求牛逼也是最容易变现的地方，QQ上的红橙黄蓝绿青蓝紫钻，陌陌的会员服务，知乎的赞，这些都是能够用于变现。再谈追求刺激，生物学家发现大脑存在一个唤醒值，这个指标最好周期性的达到一定的高度，也就是人不能太不兴奋，否则就会萎靡不振，空虚无聊，而太亢奋了也不行，亢奋过头人也承受不了，哺乳动物的唤醒值天生比较高，因为在原始环境里没有现在的围墙来保护它们，所以睡觉的时候必须半睡半醒，应对各种风吹草动，而从哺乳动物发展而来的人类也是如此，这也解释了人为什么喜欢猎奇，喜欢八卦，会好奇，会担心受怕，会对跌宕起伏的剧情有着持续不断的执着追求，而许多产品也是针对了这一点，比如陌陌的广告词：</p>
<blockquote>
<p>别和陌生人说话，别做新鲜事，继续过平常的生活。胆小一点，别好奇，就玩你会的，离冒险远远的，有些事想想就好，没必要改变。待在熟悉的地方，最好待在家里 ，听一样的音乐，见一样的人。重复同样的话题。心思别太活，梦想要实际，不要什么都尝试。就这样活着吧。</p>
</blockquote>
<p>陌陌的广告词就是和追求刺激大唱反调，就好比在说“你不追求刺激，你就这样活着吧”，陌陌的成功正是对于人类追求刺激的印证。恐惧感也隶属于刺激，因为恐惧感是刺激的副产品，正因为有了刺激，人才会担心受怕，比如一句流传已久的话“弹钢琴的孩子不会学坏”，这就是在兜售恐惧，潜台词就是“不学钢琴的孩子容易学坏”，利用人心底的恐惧来传播从而达到它的目的，这也解释了现在保健品、养生概念的大流行，某种意义上来讲它们就是在兜售恐惧，追求刺激。</p>
<p>如果人类的本质需求只在于这3点，未免浅显了点，的确，对于需求的探讨不能止步于此，如果说人类的本质需求在于追求舒适，追求牛逼，追求刺激，那这三者之间是什么样的关系呢？马斯洛需求层次理论的核心在于需求上移，而我这里就要对于这个需求上移提出质疑了，在当今社会上，卖肾买iPhone，吃不饱穿不暖住不好还攒好几个月买奢侈品的现象层出不穷，这能说是需求上移吗？所以我认为，追求舒适，追求牛逼，追求刺激这3点是一定程度上相互叠加的并行需求，而这个叠加和并行的程度取决于社会环境。</p>
<p>雄孔雀以开屏求偶，尾巴越大越能吸引雌性，这是追求牛逼，但是越长的尾巴实际上阻碍了孔雀的行进，对于孔雀的行动是一种负担，这不正违反了追求舒适吗？再看女人的高跟鞋，高跟鞋吸引了男人的注意，是在追求牛逼，但高跟鞋让脚更累更难受，不也是违反了追求舒适？所以从这些现象上看，追求牛逼似乎在追求舒适之上，但同样，不少人勤俭节约，对于牛逼的追求似乎不那么大，那么到底是什么导致了需求的优先级呢？我认为是社会环境使然。</p>
<p>社会环境在一步步提高人类的基本需求，原始社会，人不穿衣服也不会羞耻，而在现代社会，即使是乞丐，不穿衣服一样会觉得不妥，是什么导致了基本需求的上移？是社会环境。一百年前的人会有刷朋友圈的需求吗？而今天的人们一天不刷朋友圈浑身难受，是朋友圈这个抽象概念带来的影响吗？不是，是周围人都刷朋友圈带来的社交压力使然，人使用何种社交App不在于该App用户体验多么好，关键在于周围的朋友用什么社交App，因而可以说，社会环境是人类基础需求提高的核心因素。这也解释了为什么社会上有人卖肾买iPhone，吃不饱穿不暖住不好还攒好几个月买奢侈品，这就意味着在当今社会环境的催使上，追求牛逼似乎渐渐成了人类的首要追求，现代社会已经基本满足了人类的温饱，从而使得人们转而开始追求牛逼，职场上的争权夺利，工资高低带来的身份地位，学历教育给人的身份认同，都无疑不证明着追求牛逼的需求在上升，现在亲戚一聚就问：“在哪儿上班啊？工资多少啊？”，父母也喜欢说：“选个建筑专业，出来有钱赚。”这些都是很好的体现。所以，这是一个物欲的时代。在人们基本解决温饱之后，开始追求牛逼，而物质是一个人牛逼与否最直接的体现，用物质来证明身份是最浅显的道理，因而也是最容易体现自己牛逼的方式。</p>
<p>然而，当现代社会基本解决了人们的温饱后，人们陷入了空虚无聊，人们变得不知所措，萧伯纳有句话说的极好：</p>
<blockquote>
<p>人生有两种悲剧：一种是没有得到你心里想要的东西；另一种是得到了。</p>
</blockquote>
<p>正是因为人们基本解决了温饱，所以人们转而变得空虚无聊，这种不知所措使得人们开始追求牛逼，开始过度消费。消费主义的盛行一方面得益于温饱的解决，另一方面在于商人、企业家、政治都在不断的鼓吹消费，不断的激发甚至创造需求，从而导致了人们基本需求的上移，那些曾经看起来不必要的需求，开始被鼓吹成必要需求，甚至连我们自己都开始欺骗自己这些需求都是必要的。比如我走在路上，本来并不口渴，突然看见了可口可乐的广告，看着可乐飞扬的气泡还有明星喝可乐畅爽的表情，我的喉咙似乎有一丝干渴，于是乎就买了一瓶，这是本不必要但被激发的需求。我并不爱喝咖啡，但每路过星巴克，我总想买一杯，买完还感觉良好，这是因为星巴克利用其品牌效应，让我买咖啡的同时买了一种身份认同，买了一种“我很小资我享受生活”的认同感，这也是并不必要而被激发的需求。再好比如今“双十一”、“双十二”的流行，这更是被创造的需求，可以说，我们身边大量的需求放在一百年前都是伪需求，而今之所以变成必要的需求，很大程度在于社会环境，一是因为人们基本解决了温饱转而追求牛逼，另一方面在于商人、企业家、政治都在不断激发并创造需求导致基本需求的上移。</p>
<p>所以产品设计也是如此，我认为，一个产品要想可持续可发展，必然要直击人追求舒适、追求牛逼、追求刺激这3个本质需求，并不断的切合并引领用户的需求上移，可以激发需求，甚至创造需求。而3个本质需求的优先级则要由市场决定，也就是社会环境决定，这是个物欲的时代，如果产品走的是高端化，那么追求牛逼要放在追求舒适之前，如果走的是低端路线，那么是否舒适是否实用是否解决问题则是产品的关键，同样是手表，Cartier的手表和普通手表在功能上都是告知时间，但价格反差之大却令人咋舌，原因就在于其目标用户的不同，一个更在乎追求牛逼，一个更在乎追求舒适。而我认为，追求牛逼是变现的关键，许多产品的增值业务都来自于追求牛逼，而只追求舒适的产品我认为并不能长久，比如许多工具类产品的兴衰都证明了这一点。当然也不能忘了追求刺激，要论产品设计里追求刺激的重要性，我想先说说心理学家做过的一个实验：</p>
<blockquote>
<p>心理学家将孩子熟悉和陌生的玩具放在6个盒子里，第1个盒子五件玩具都是熟悉的，第2个放四个熟悉的一个陌生的，第3个放三个熟悉的两个陌生的，第4个放两个熟悉的三个陌生的，第5个放一个熟悉的四个陌生的，第6个放五件陌生的玩具。然后心理学家向孩子们展示了这6个盒子，第1个盒子和第6个盒子都没有一个孩子挑选。</p>
</blockquote>
<p>因此，产品需要给用户刺激，给用户彩蛋，比如微信聊天时发送“么么哒”、“生日快乐”、“恭喜发财”、“下雪了”都会出现彩蛋，这是新奇的，是给用户以刺激，让用户感到惊喜，你可以回想一下，当你第一次知道微信长按可以发文字的时候，我相信那一瞬间你是惊喜的，这就是追求刺激的魅力，一个产品需要持续不断的给用户以刺激，但刺激不能过多，用户同样需要一致性来给自己安全感，也就是追求舒适，否则就会像那个心理实验里第六个盒子一样，彻底流失用户。</p>
<p>最后我想谈谈用户体验，《后物欲时代的来临》中郑也夫谈到了工业的本质在于降低门槛，我觉得用户体验也是一个道理，用户体验的作用就是为了降低门槛，用户使用银行的客户端需要很多步才能转账，界面操作还不易懂，而使用支付宝一键就转账了，特别容易，这是降低了用户的使用门槛。以前听首歌需要去买正版CD，现在下载网易云音乐就能免费听了，这是降低了价格门槛，其实互联网产品的爆发很大程度就是降低了门槛，让用户能够用更少的成本去达成自己的目的，我想很多人就要质疑我了，有人说用户体验里还有个东西叫情感化设计，用产品去和用户经营一段感情，这和门槛又有什么关系呢？事实上，情感化设计不正是降低了人们获得情怀，获得心理安慰，获得情感认同的门槛吗？所以说到底，用户体验就是做了一件事，降低门槛。</p>
<p>《后物欲时代的来临》这本书不仅探讨了人类本质需求，更是探讨了消费主义、广告原罪、物质崇拜、身份认同、贵族文化、虚拟空间、后物欲的时代面貌等等社会现象，而我只是在其中几个方面的探讨基础上，结合了自己的思考，并将其转到了产品设计上，我认为这是一本极好的书，特别是其中对于后物欲时代面貌的探讨非常有深度，建议可以读读看，想下载电子版的也可以点击<a href="http://pan.baidu.com/s/1ntISDzN" target="_blank" rel="external">iBooks版</a>和<a href="http://pan.baidu.com/s/1gdArrrH" target="_blank" rel="external">PDF版</a>进行下载。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近读了郑也夫著作的《后物欲时代的来临》，这是一本关于人类社会的书，虽说只有短短十二章，但却解释了人类需求、消费实质、广告原罪、物质崇拜、工作与娱乐等多种社会现象，特别是其中探讨的人类需求实质对于产品设计也有很大的指导性，其中对于消费门槛的叙述在某种程度上也反映了用户体验的实质，因此，我就把对于这本书的思考转移到产品设计上，写成了这篇文章。<br>]]>
    
    </summary>
    
      <category term="产品" scheme="http://yoursite.com/tags/%E4%BA%A7%E5%93%81/"/>
    
      <category term="文集" scheme="http://yoursite.com/tags/%E6%96%87%E9%9B%86/"/>
    
      <category term="产品" scheme="http://yoursite.com/categories/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用reveal.js做一个在线CV]]></title>
    <link href="http://yoursite.com/2015/11/05/javascript1/"/>
    <id>http://yoursite.com/2015/11/05/javascript1/</id>
    <published>2015-11-04T16:00:00.000Z</published>
    <updated>2015-11-18T02:54:42.000Z</updated>
    <content type="html"><![CDATA[<p>用reveal.js做了一个在线CV，如果你细心的话应该能注意到，博客的侧边栏里多了一个cv的链接，关于页面的名字部分也变成了cv的链接，这主要是最近受知乎这个问题<a href="http://www.zhihu.com/question/23150301/answer/53954506" target="_blank" rel="external">「一份优秀的前端开发工程师简历是怎么样的」</a>的启发，就自己用reveal.js做了一个在线CV并关联到了博客里，所以就想在博客里简单介绍一下reveal.js，让不会代码的人也能轻松创建自己的在线CV。<a id="more"></a>整个的实现过程非常简单，只要下载reveal.js，然后自己改动html和css就可以了，源码里还提供了多个css主题，只要在link里自己改动theme里的css名称就可以查看不同主题的效果了，非常方便，博客里主要介绍一下几个改动要点。有兴趣的可以直接点击<a href="http://ursocute.github.io/wanshiqi-s-cv/index.html#/" target="_blank" rel="external">在线预览</a>来查看我的CV，还可以点击查看<a href="https://github.com/ursocute/wanshiqi-s-cv" target="_blank" rel="external">源代码</a>。</p>
<h5 id="下载reveal-js">下载reveal.js</h5><p>第一步肯定是下载reveal.js了，首先前往<a href="https://github.com/hakimel/reveal.js" target="_blank" rel="external">reveal.js</a>的github项目页面，点击download zip下载代码压缩包。</p>
<h5 id="修改主题">修改主题</h5><p>解压后，<code>reveal.js-master/css/theme</code>里就是自带的主题样式，可以在index.html里修改下面href里的内容，把想要的主题样式名字替换掉。但由于reveal.js更多是做幻灯片展示的，如果是做个人CV的话，用主题的样式字体就会比较大，建议自己写份css，比如我用的就是<a href="https://github.com/ursocute/wanshiqi-s-cv/blob/master/css/index.css" target="_blank" rel="external">这份</a>。</p>
<pre><code>&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"css/theme/black.css"</span> <span class="property">id</span>=<span class="string">"theme"</span>&gt;
</code></pre><h5 id="修改转场">修改转场</h5><p>reveal.js提供了None、Fade、Slide、Convex、Concave、Zoom这6种转场效果，想要更改的话就在index.html找到下面这段代码，把其中的<code>transition: &#39;slide&#39;</code>换成你想要的转场效果就可以了。</p>
<pre><code><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">

        <span class="comment">// Full list of configuration options available at:</span>
        <span class="comment">// https://github.com/hakimel/reveal.js#configuration</span>
        Reveal.initialize({
            controls: <span class="literal">true</span>,
            progress: <span class="literal">true</span>,
            history: <span class="literal">true</span>,
            center: <span class="literal">true</span>,

            transition: <span class="string">'slide'</span>, <span class="comment">// none/fade/slide/convex/concave/zoom</span>

            <span class="comment">// Optional reveal.js plugins</span>
            dependencies: [
                { src: <span class="string">'lib/js/classList.js'</span>, condition: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{ <span class="keyword">return</span> !<span class="built_in">document</span>.body.classList; } },
                { src: <span class="string">'plugin/markdown/marked.js'</span>, condition: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{ <span class="keyword">return</span> !!<span class="built_in">document</span>.querySelector( <span class="string">'[data-markdown]'</span> ); } },
                { src: <span class="string">'plugin/markdown/markdown.js'</span>, condition: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{ <span class="keyword">return</span> !!<span class="built_in">document</span>.querySelector( <span class="string">'[data-markdown]'</span> ); } },
                { src: <span class="string">'plugin/highlight/highlight.js'</span>, <span class="keyword">async</span>: <span class="literal">true</span>, condition: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{ <span class="keyword">return</span> !!<span class="built_in">document</span>.querySelector( <span class="string">'pre code'</span> ); }, callback: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{ hljs.initHighlightingOnLoad(); } },
                { src: <span class="string">'plugin/zoom-js/zoom.js'</span>, <span class="keyword">async</span>: <span class="literal">true</span> },
                { src: <span class="string">'plugin/notes/notes.js'</span>, <span class="keyword">async</span>: <span class="literal">true</span> }
            ]
        });

</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>    
</code></pre><h5 id="添加Slide">添加Slide</h5><p>在index.html里，添加Slide要确保在以下代码中添加，每一个<code>&lt;section&gt;&lt;/section&gt;</code>就是一个Slide，如果在<code>&lt;section&gt;&lt;/section&gt;</code>中再添加<code>&lt;section&gt;&lt;/section&gt;</code>，嵌入section的Slide就会变成垂直滚动。</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"reveal"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"slides"</span>&gt;</span>
        <span class="comment">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><h5 id="分段显示">分段显示</h5><p>如果想在一个Slide里分段显示，在你想分段的标签里添加<code>class=&quot;fragment&quot;</code>就可以了。</p>
<pre><code><span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"fragment grow"</span>&gt;</span>grow<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
</code></pre><p>如果想控制分段显示的效果，就在<code>class=&quot;fragment&quot;</code>的后面添加分段显示的文字，reveal.js提供grow、shrink、fade-out、current-visible、highlight-red、highlight-blue这6种效果。</p>
<pre><code>&lt;p <span class="keyword">class</span>=<span class="string">"fragment grow"</span>&gt;grow&lt;/p&gt;
&lt;p <span class="keyword">class</span>=<span class="string">"fragment shrink"</span>&gt;shrink&lt;/p&gt;
&lt;p <span class="keyword">class</span>=<span class="string">"fragment fade-out"</span>&gt;fade-<span class="keyword">out</span>&lt;/p&gt;
&lt;p <span class="keyword">class</span>=<span class="string">"fragment current-visible"</span>&gt;current-visible&lt;/p&gt;
&lt;p <span class="keyword">class</span>=<span class="string">"fragment highlight-red"</span>&gt;highlight-red&lt;/p&gt;
&lt;p <span class="keyword">class</span>=<span class="string">"fragment highlight-blue"</span>&gt;highlight-blue&lt;/p&gt;
</code></pre><h5 id="结语">结语</h5><p>博客只是简单的介绍了一下reveal.js，如果你懂前端，相比reveal.js更推荐使用<a href="https://github.com/alvarotrigo/pagePiling.js" target="_blank" rel="external">pagepillings.js</a>和<a href="https://github.com/alvarotrigo/fullPage.js" target="_blank" rel="external">fullpage.js</a>，或直接点击<a href="https://github.com/hakimel/reveal.js" target="_blank" rel="external">reveal.js</a>查看文档及源码就好。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>用reveal.js做了一个在线CV，如果你细心的话应该能注意到，博客的侧边栏里多了一个cv的链接，关于页面的名字部分也变成了cv的链接，这主要是最近受知乎这个问题<a href="http://www.zhihu.com/question/23150301/answer/53954506">「一份优秀的前端开发工程师简历是怎么样的」</a>的启发，就自己用reveal.js做了一个在线CV并关联到了博客里，所以就想在博客里简单介绍一下reveal.js，让不会代码的人也能轻松创建自己的在线CV。]]>
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[知乎的用户体验研究分析报告]]></title>
    <link href="http://yoursite.com/2015/11/02/product2/"/>
    <id>http://yoursite.com/2015/11/02/product2/</id>
    <published>2015-11-01T16:00:00.000Z</published>
    <updated>2015-12-03T12:17:44.000Z</updated>
    <content type="html"><![CDATA[<p>这份知乎的用户体验研究分析报告是新媒体用户分析专业课的一个课程设计，是由团队共同完成的一份用研报告，可用性测试、用户访谈的用研部分是由团队里其他人完成，而我主要负责其中产品分析，数据分析，寻找解决方法这些分析部分。当时我们做调研部分的时候，知乎长答案还没有加随时收起的功能，撰写报告时才发现知乎已提升了长答案收起功能的体验，改进方案也与我们提出的类似，这也是对我们用研的一次验证，所以也在博客里分享一下我们的<a href="http://pan.baidu.com/s/1kTGTNp1" target="_blank" rel="external">用研报告</a>。<br><a id="more"></a></p>
<h4 id="产品分析（用户体验五要素）">产品分析（用户体验五要素）</h4><h5 id="战略层">战略层</h5><h6 id="产品目标">产品目标</h6><ol>
<li><p>产品定位：知乎是一个真实的网络问答社区，社区氛围友好、理性、认真，这里连接了各行各业的精英，分享彼此的专业知识、经验、见解，为中文互联网源源不断地提供高质量的信息，在这里，发现更大的世界。</p>
</li>
<li><p>产品战略：知乎的主要战略目标是打造一个真实、具备行业精英、高质量的问答社区。互联网以内容为王，而高质量的内容本身就在一定程度决定了产品的价值，所以知乎的出现弥补了在互联网中对相关领域缺乏深入探讨的空白，解决了高质量用户之间平等对话的障碍问题。知乎的目标就是做深度的、高质量的、以行业精英为中心的问答社区。</p>
</li>
</ol>
<h6 id="用户需求">用户需求</h6><ol>
<li><p>满足求知欲，通过知乎来探讨并获取更具深度的、更多角度的话题。</p>
</li>
<li><p>满足认同感，通过知乎来提升自己，发现更大的世界，发现另一个自己。</p>
</li>
<li><p>满足成就感，通过创造高质量的回答获得认可与赞同，获得自我成就。</p>
</li>
</ol>
<h5 id="范围层">范围层</h5><h6 id="提供功能">提供功能</h6><ol>
<li><p>基本功能：提问、回答、消息和个人设置</p>
<p> 提问和回答是知乎的核心用户路径，知乎是以话题为基本单元，每个话题包含若干问题，而每个问题隶属于若干话题，用户通过提问和回答来满足需求，并生产内容。消息包括赞、评论、收藏、感谢、私信等，用于促进并活跃高质量答案的产生，个人设置包括个人资料的设置、知乎的设置。</p>
</li>
<li><p>特色功能：发现、收藏、推荐</p>
<p> 根据用户关注的话题和相关回答来推荐问题推送，热门问题推送，热门收藏推送等，通过这种推送，使得知乎用户不局限在自己关注的几个话题里，而能发现更多的优质答案，高质量内容，从而提高社区活跃度，增加用户粘性。</p>
</li>
</ol>
<h6 id="内容需求">内容需求</h6><ol>
<li><p>品牌需求：用户对于知乎有一定品牌认知度，而知乎同时也是高质量内容、精英人群的象征，这满足了用户的社会认同心理。</p>
</li>
<li><p>用户需求：显性需求：提问来探讨和解决问题，回答问题创造高质量价值；隐性需求：更深度、更多角度的了解一个问题，更深入的了解知识，满足求知欲，回答问题获得认可，获得成就感和认同感。</p>
</li>
<li><p>性能需求：通过算法进行准确的问题推送，高质量回答的信息抓取与匹配，简化用户的操作，简化用户获取信息的路径。</p>
</li>
</ol>
<h5 id="结构层">结构层</h5><ol>
<li><p>导航栏：首页、话题、发现、消息、个人</p>
</li>
<li><p>首页：上部为知乎搜索栏，搜索栏右侧是提问按钮，其他为关注的人、话题新产生的问答动态，动态为首页的主体内容，而右侧是我的草稿、我的收藏、所有问题、话题广场、知乎圆桌等快捷入口，同时还有可能感兴趣的人、知乎周刊等推送内容，总体而言，首页以动态为主体，以推送、入口为辅。</p>
</li>
<li><p>话题：话题以已关注的话题动态为主体，同时侧边提供常去话题、话题广场等入口与推送。</p>
</li>
<li><p>发现：发现内部分为编辑推荐、今日最热、本月最热、知乎圆桌、热门话题、热门收藏等。</p>
</li>
<li><p>消息：消息以弹出层的形式出现，分为评论与回答、赞与感谢、关注这三大块。</p>
</li>
<li><p>个人：个人包括对个人资料的设置以及对知乎的设置，个人资料的设置包括头像、性别、介绍、简介等等，而对知乎的设置包括账号密码、消息邮件、屏蔽等设置。</p>
</li>
</ol>
<h5 id="框架层">框架层</h5><ol>
<li><p>界面：界面以左右分栏为主，每个页面将主体内容放在左侧，而辅助内容如入口、推送等则在右侧显示，不阻碍用户的阅读体验。</p>
</li>
<li><p>信息：信息以话题为主，每个话题包含若干问题，而每个问题隶属于若干话题，同时以创造高质量内容的知乎用户为中心进行向外扩散。</p>
</li>
<li><p>导航：导航栏固定在顶部，以首页、话题、发现、消息、个人为导航路径，同时提供提问和搜索的按钮。</p>
</li>
</ol>
<h5 id="表现层">表现层</h5><ol>
<li><p>LOGO：“知乎”是以文言文的方式传达问答的意蕴，蓝色的主色调象征着理性和智慧，这显示着知乎理性、智慧、高质量的象征意义。</p>
</li>
<li><p>颜色：基本色是蓝色，导航条和icon都采用了这种蓝色，在视觉上保持了内部的一致性，蓝色使人感觉沉稳安静，体现着智慧与理性，而大面积的白色则简单纯净，减少了用户的认知负担。</p>
</li>
<li><p>排版布局：阅读区域以白色为主不增添用户的认知负担，导航部分为蓝色进行突出，使得用户能明确的知道自己所在的位置，其他的分块内容以左右的形式排版，左边为主体，右边为辅助，突出主体，又留有快捷入口和推送内容。</p>
</li>
<li><p>风格：简约清新的风格，突出有状态的icon和导航，其他的阅读区尽量留白和简化，减少用户的认知负担，尽量达到沉浸式体验。</p>
</li>
</ol>
<h4 id="产品不足">产品不足</h4><p>我们从三个不同的方向：用户需求、功能交互、界面设计来提出知乎的不足之处，其分别对应了用户体验的战略层、结构层、框架层。</p>
<h5 id="战略层-1">战略层</h5><p>知乎是否变水了？由于知乎平台近几年发展趋势猛烈，用户量急剧上升。但是与此同时，有一些用户开始抱怨知乎问题质量也开始下降，也就是所谓的知乎“变水”了。他们的观点主要是来自于知乎用户量增长带来的平均素质水平下降而导致知乎回答变得随意而质量下降。</p>
<h5 id="结构层-1">结构层</h5><p>知乎安卓版的客户端“发现”模块的“随机看”按钮没有明显的功能提示，且无法连续的进行点击操作，随机功能无法达到。</p>
<h5 id="框架层-1">框架层</h5><ol>
<li><p>在知乎的iOS客户端查看回复时，进入评论区时不显示前一条回复，当我们看到一条回复时，本该出现在附近的被回复信息却不知道在哪里，影响了用户的使用体验。</p>
</li>
<li><p>知乎长答案无法随时收起，长答案通常以缩略的形式显示，会有一个“显示全部”功能用以查看所有内容，而点击后阅读到一半无法随时进行收起。</p>
</li>
</ol>
<h4 id="用户研究与分析">用户研究与分析</h4><h5 id="战略层-2">战略层</h5><h6 id="问题描述：知乎是否变水了？">问题描述：知乎是否变水了？</h6><p>知乎平台近几年发展趋势猛烈，用户量急剧上升。但是与此同时，有一些用户开始抱怨知乎问题质量也开始下降，也就是所谓的知乎“变水”了。他们的观点主要是来自于知乎用户量增长带来的平均素质水平下降而导致知乎回答变得随意，质量下降。那么，知乎问题质量是否真的下降了呢？</p>
<h6 id="用研方法：数据调研分析">用研方法：数据调研分析</h6><ol>
<li><p><strong>数据分析</strong></p>
<p> 由于短时间内自行调查获取数据较难，所以我们采用了研究第三方数据的方法。数据的来源是<a href="http://zhuanlan.zhihu.com/sulian/19907234" target="_blank" rel="external">民间版知乎分析报告第二期—赞同背后的秘密</a>。（注：采集如此庞大的数据，需通过编写数据抓取程序对一段时间内（8到10天）的知乎动态数据进行采集，并进行分类汇总分析。）</p>
<p> 我们主要通过对数据总体量、需要分析的数据趋势、图表数据分类来进行深度分析，我们认为具有一定的参考价值。首先是赞同数的分布情况，如下图：</p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-1.png" alt=""></p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-2.png" alt=""></p>
<p> 上图表可以看出，获知赞同数在1000以上的答案数只占到了总体的0.14%。甚至赞同数在100以上的答案也只有1.3%左右。这说明在知乎上想要获得他人的赞同是比较困难的，知乎的用户相对较为理智，能获得1000以上的赞同数可以说是获得了相当高的支持度，因而我们可以初步将赞同数在1000以上的回答作为高质量回答。这是我们作为评判高质量回答的依据，也为之后的数据分析做铺垫。</p>
<p> 接下来我们分析赞同数和字数的关系，如下图：</p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-3.png" alt=""></p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-4.png" alt=""></p>
<p> 在上两图中，横坐标为赞同数，纵坐标为字数，将每个回答作为一个点做成了2个点阵图。可以看出随着赞同数的增加，字数也是不断增加，最后的字数稳定在千字这个数量级，而且可以看出1000赞同数以上的回答字数大致都分布在中心线上下，即文字数量都较大，这也符合人们对于高质量回答的认知：字数较多，有干货，能获得较多人的认可与赞同。</p>
<p> 最后从时间维度上看观察一下千字答案的占比，如下图：</p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-5.png" alt=""></p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-6.png" alt=""></p>
<p> 上图1是超过100字的答案占比和超过1000字的答案占比随着时间的变化表，上图2则是超过100字的答案赞同占比和超过1000字的答案赞同占比随着时间的变化表。</p>
<p> 上图1中，超过100字的答案趋势不明显，有上升和下落。而超过1000字的答案占比则是不断上升，从一开始的1%逐渐上升到了后来的3.5%，上升趋势十分明显。而图二，趋势变得更明显了：两条曲线的大方向始终是一路走高，2013年6月之后尤其如此。到了今天，100字以上的答案掠走了赞同总数的80%；而1000字以上答案虽然总数不到4%，所有人点下的赞同却有40%落在它们头上，也就是说，千赞数的回答在持续不断的走高。</p>
</li>
<li><p><strong>结论与分析</strong></p>
<p> 概括而言，知乎的高质量回答不论是从比例还是数量上其实都是增长的，即知乎并没有变水。但为什么会有很多人觉得知乎总体变水了呢，我们讨论后认为，其关键原因在于，问题数和回答数的增加，导致用户获取高质量回答的途径变得困难了，也就是说，用户获取高质量回答的成本变高了。比如相似问题过多，而所有的相似问题中可能只有一个获得了较多关注，获得了高质量的回答，而其他的相似问题则得不到关注，却占用了资源和空间，而用户在搜索的过程中，发现了过多的得不到关注的低质量相似问题，因而用户会觉得，知乎变水了。所以我们认为，减少用户获得高质量回答信息的困难度，降低用户获取高质量信息的成本是解决这个问题的关键。</p>
</li>
<li><p><strong>解决方法</strong></p>
<p> 为了解决这个问题，知乎官方应该对高质量回答做出向导作用，而知乎其实已经有所作为，其旗下应用如《知乎日报》、《读读日报》其实就是知乎编辑的定向引导。但我们认为知乎也应该从根源上处理这个问题，可以处理掉一些僵尸号或者删除低质量或不符合要求的问答，提升门槛，就是一种对内容高质量化的手段，而这种门槛一方面可以使得知乎纯净化，一方面更使得知乎品牌化，我觉得这是使得知乎纯净化的必要手段之一。</p>
<p> 知乎的高质量内容来自于用户，但用户的信息同样需要官方来规范和引导，为了知乎的更好发展，我们觉得需要用户和官方的共同努力，而官方的规范和引导就显得尤为关键。</p>
</li>
</ol>
<h5 id="结构层-2">结构层</h5><h6 id="问题描述1：用户对知乎移动端App使用体验如何">问题描述1：用户对知乎移动端App使用体验如何</h6><h6 id="用研方法1：用户反馈、卡片分类">用研方法1：用户反馈、卡片分类</h6><ol>
<li><p><strong>从AppStore中采集代表性的用户反馈进行分析</strong></p>
<p> 调研结果：如下图：</p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-7.png" alt=""></p>
</li>
<li><p><strong>卡片分类法（开放式）</strong>    </p>
<p> 测试人数：12</p>
<p> 调研步骤：将知乎App所提供的功能单独写在卡片上提供给测试者，卡片未经分类及排序，让他们根据个人需求和使用习惯进行自由组合分类，并依照优先级将分类的卡片排序。  </p>
<p> 卡片内容：搜索；功能（随便看看，摇一摇，推送消息）；版块（发现、专栏、话题、主题）；问答（提问、感谢、赞同、关注）；设置（个人主页，主题，草稿）</p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-8.jpeg" alt=""></p>
<p> 调研结果：</p>
<p> 对被试分类结果的总结，大致可分为：</p>
<p> （1）版块——问答——功能——搜索——设置</p>
<p> （2）问答——版块——搜索——功能——设置</p>
</li>
<li><p><strong>结论与分析</strong></p>
<p> 从大量用户反馈可以看出，知乎最新版本的移动客户端存在一些细节的问题，主要集中在用户安装、更新Bug，缺少实用的横屏功能，从其他App跳转无法查看相关评论等。</p>
<p> 从分类上看，用户对卡片的分类呈现比较高的一致性，说明目前知乎客户端对功能分类较为合理。分歧主要体现在“赞同”和“感谢”两个使用场景模糊不明确。多数用户认为，使用“赞同”时，依据现有的知识来肯定回答者的答案，直接影响到了答案的排名当中，间接推选提供最好的。使用“感谢作者”时，往往是看到了让人赞叹的精彩答案，但自身对其并无大多了解，所以无法去肯定或担保，所以表示感谢作者而不影响答案的排名。</p>
<p> 从排序上看，大部分用户的优先级体现在版块和问答两个方面，肯定了知乎作为高质量问答社区的价值。而测试中所有用户都将设置放在最后，说明对个人主页的管理、消息的推送等需求较少。</p>
</li>
</ol>
<h6 id="问题描述2：知乎安卓版的客户端“随机看”按钮无法连续操作">问题描述2：知乎安卓版的客户端“随机看”按钮无法连续操作</h6><p>点击该按钮后将会转到随机一篇文章，该文章右上角仍会有该按钮，再次点击该按钮，仍显示原文章。当退出这篇文章，重新点击按钮，进入的还是该文章。在多次的测试后，我们发现该按钮为知乎的安卓客户端新加的一个“随机看”功能。当点击按钮时有一定几率会在文章标题处飘过“随机看”的提示。另外，也不是每一次进入都是同一篇文章，当关闭知乎后台再次进入后有一定几率刷新文章。我们认为知乎安卓版的客户端“随机看”功能不完善。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product2-9.png" alt=""></p>
<h6 id="用研方法：可用性测试">用研方法：可用性测试</h6><ol>
<li><p><strong>可用性测试</strong>  </p>
<p> 我们对该功能采用了可用性测试的调研方法。调研视频如下：<a href="http://www.17sysj.com/video/lpds_a3f85f848704a" target="_blank" rel="external">知乎随机看看的可用性测试</a>。在测试过程中，我们对被测试者进行引导，引导其使用“随机看”的功能，观察被测试者对这个功能的理解，观察被测试者是否在这个过程中是否目的无法达成，是否有对此功能的困惑与不解，我们让其多次点击该按钮并让其推测该按钮的功能作用，意在测试被测试者对按钮的理解。</p>
</li>
<li><p><strong>结论与分析</strong></p>
<p> 我们发现，被测试者对该按钮存在很大的疑问，因为该按钮使用前后都没有提示，但每次进入却是同一篇文章，不管是继续按还是退出程序，再次点击后仍然显示是同一篇文章，这让被测试者十分困惑，不清楚这个功能的含义，特别是在点击完成后，这个按钮还会出现在此随即问题的顶部，出现就意味着该按钮是可再点击的，而用户再点击后却没有发生任何变化，也就是说知乎客户端没有给用户任何的反馈，用户就不知道自己的操作产生了什么变化，从而疑惑该按钮功能的意义，这确实是知乎安卓客户端的一个问题。而当我们解释该按钮功能后，被测试者仍旧表示了一定程度的不满，这证明“随机看”功能缺失的确存在不足。</p>
</li>
<li><p><strong>解决方法</strong></p>
<p> 首先是增加按钮的注释，在点击该按钮出现文章后应该在文章左上角增加“随机”字样说明。其次是对“随机看”应有功能的补充。“随机看”的功能应该如其名，当点击该按钮时会随机出现一篇文章而不是每次都是同一篇。我们组认为这种情况是由于数据库问题和随机看的算法造成的，导致在一个时间段内知乎随机看跳转的问题均为同一个。所以应该重新优化随机看获取问题的算法，解决该问题，使得每次点击都可以从后台获取一篇不同且回答较多，赞数较多的高质量问题呈现给用户。</p>
</li>
</ol>
<h5 id="框架层-2">框架层</h5><h6 id="问题描述1：知乎iOS客户端从消息栏进入评论区时不显示前一条回复">问题描述1：知乎iOS客户端从消息栏进入评论区时不显示前一条回复</h6><p>在知乎的iOS客户端查看回复时，进入评论区时不显示前一条回复，当我们看到一条回复时，本该出现在附近的被回复信息却不知道在哪里，影响了用户的使用体验。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product2-10.png" alt=""></p>
<h6 id="用研办法：可用性测试">用研办法：可用性测试</h6><ol>
<li><p><strong>可用性测试</strong></p>
<p> 我们采用了可用性测试的方式来研究这个问题。可用性测试视频链接如下<a href="http://www.17sysj.com/video/lpds_58c63fef0631a" target="_blank" rel="external">知乎客户端评论可用性测试</a>。测试过程中，我们让被测试者打开一个回答查看其评论区并追踪其中的回复。在评论区中，被测试者找到了一条回复信息，但他并没有在附近看到被回复者，于是他浏览评论区并在相当长的时候过后才在下面找到了被回复的那条信息，被测试者表示这个回复设置的很不合理，对于自己点击2次滑动一分钟才找到自己评论的过程表示非常不满。</p>
</li>
<li><p><strong>结论与分析</strong></p>
<p> 知乎iOS客户端从消息栏进入评论区时，无法显示自己前一条回复，用户需要2次点击以及长时间的滑动才能定位到自己之前的回复，用户体验差。</p>
</li>
<li><p><strong>解决方案</strong></p>
<p> 解决方案就是直接跟踪数据源头，将回复信息与原信息放在一起，如下图：</p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-11.png" alt=""></p>
<p> 在我们发现这个问题并提出解决方案后，我们陆续在其他一些移动客户端上也发现了这种类似这种不显示之前回复的问题（如微博，网易云音乐），而这个问题其实在一定程度上很影响用户体验，所以希望各大互联网公司可以及时发现问题解决问题，提升产品的用户体验。</p>
</li>
</ol>
<h6 id="问题描述2：知乎长答案无法随时收起">问题描述2：知乎长答案无法随时收起</h6><p>在使用知乎web端时，长答案通常以缩略的形式显示，会有一个“显示全部”功能用以查看所有内容，而点击后阅读到一半无法随时进行收起，如图所示：</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product2-12.jpeg" alt=""></p>
<p>当点击后我们可以看到所有内容，原先的“显示全部”按钮转变为“收起”按钮。如图所示：</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product2-13.jpeg" alt=""></p>
<p>该按钮只存在于回答顶部和底部。但对于一些特别长的文章或者是你觉得无聊的文章，你阅读到一半时，若想关闭，不得不到回答顶部与底部去寻找“收起”按钮。我们小组认为这之中存在不友好的交互。</p>
<h6 id="用研方法：用户深度访谈">用研方法：用户深度访谈</h6><ol>
<li><p><strong>用户深度探访</strong></p>
<p> 对于这个问题，我们采取了用户访谈的调研方式来探知用户对这个收起功能的了解情况和满意度。在访谈中我们发现这种问题确实存在，并且用户一般是通过寻找问题顶部与底部的“收起”按钮来解决问题，在一定程度上并不利于用户便捷地操作。<strong>用户访谈的部分记录如下：</strong></p>
<blockquote>
<p>访谈者A：用过啊。<br>用研人员：出现过蛮长的答案吧。然后看一半不想看了？<br>访谈者A：嗯。<br>用研人员：那这个时候，你一般是怎么办的呢？<br>访谈者A：就不看了啊，能怎么办。<br>用研人员：我们的意思是不想看这个答案，想看下一个答案，这个时候你会怎么办呢？<br>访谈者A：就往下翻啊。<br>用研人员：直接快速拉滚动条吗？<br>访谈者A：拉右边那个块块。<br>用研人员：为啥不直接点收起的按钮呢？这样比拉着更快啊，还不容易错过消息。<br>访谈者A：哪有收起的按钮？（访谈者找了一下）哦，那个收起只在一开始有啊，然后最后也有，中间没看到有收起。<br>用研人员：那那个回顶部的按钮，刚刚你有注意到吗？<br>访谈者A：我看到了。<br>用研人员：和那个收起相比，哪个好找呢？<br>访谈者A：那个回顶部好找啊，但是回到的不是这个问题的顶部，是页面的顶部。</p>
</blockquote>
<p> <strong>访谈者B的部分访谈记录如下：</strong></p>
<blockquote>
<p>用研人员：对，然后会出现一个答案看了一半，不想看的情况吧，这个时候你是直接用鼠标拉到下个答案，还是去找收起按钮快速折叠呢？<br>访谈者B：sroll down，鼠标拉。<br>用研人员：为什么不用那个按钮呢？<br>访谈者B：因为并不知道有多长啊。sroll down一下，一看哦原来这么长。<br>用研人员：原来这样，可是点按钮会很快啊。<br>访谈者B：还有就是我不用鼠标，这点你可以mark一下，Mac的触控板两个手指往上是sroll down，点的话还得找，慢得多。<br>用研人员：好的谢谢。</p>
</blockquote>
<p> <strong>访谈者C的部分访谈记录如下：</strong></p>
<blockquote>
<p>用研人员：有没有出现过看一半，发现不想看这个答案的情况呢？<br>访谈者C：有。<br>用研人员：然后这个时候你怎么办，耐着性子直接鼠标拖到下一个答案吗？<br>访谈者C：不是有一个小标志，可以收上去吗，我记得有的。<br>用研人员：那这个按钮，你觉得好找吗？<br>访谈者C：应该好吧，不知不觉中就解决了。<br>用研人员：好的谢谢。</p>
</blockquote>
</li>
</ol>
<ol>
<li><p><strong>结论与分析</strong></p>
<p> 知乎长答案无法随时收起的问题确实存在，部分用户表示这个问题虽然存在，但可忍受，并未表现出强烈的不满，因此解决这个问题可以带来体验上的提升，但是仅是满足了少部分知乎用户的需求，并不能带来本质上的体验改变。</p>
</li>
<li><p><strong>解决方法</strong></p>
<p> 对于这个问题，我们决定采用将“收起”按钮固定于页面上的一定位置来解决。将原位于右上角的收起按钮，采用与左边部分浮动的点赞按钮一样的浮动效果，在页面右上角浮动显示收起按钮，这样即使浏览答案一半途中也能快速收起长答案。效果如图：</p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-14.jpeg" alt=""></p>
</li>
<li><p><strong>后期发现</strong></p>
<p> 在我们做了解决方案的一周后，我们小组的成员在逛知乎时惊奇地发现这个问题已经被解决了。知乎的解决方案与我们小组思路类似，采用了将收起按钮固定于页面的方式，但将位置放在了回答右下角并将按钮颜色进行了一定的美化，并在滑动到问题底部时与问题底部的收起重合而消失。如下图:</p>
<p> <img src="http://7xohes.com1.z0.glb.clouddn.com/product2-15.jpeg" alt=""></p>
<p> 知乎官方的改动也从侧面表现了我们小组研究方向的正确性。</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>这份知乎的用户体验研究分析报告是新媒体用户分析专业课的一个课程设计，是由团队共同完成的一份用研报告，可用性测试、用户访谈的用研部分是由团队里其他人完成，而我主要负责其中产品分析，数据分析，寻找解决方法这些分析部分。当时我们做调研部分的时候，知乎长答案还没有加随时收起的功能，撰写报告时才发现知乎已提升了长答案收起功能的体验，改进方案也与我们提出的类似，这也是对我们用研的一次验证，所以也在博客里分享一下我们的<a href="http://pan.baidu.com/s/1kTGTNp1">用研报告</a>。<br>]]>
    
    </summary>
    
      <category term="产品" scheme="http://yoursite.com/tags/%E4%BA%A7%E5%93%81/"/>
    
      <category term="产品" scheme="http://yoursite.com/categories/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[wecoo 交互设计作品集]]></title>
    <link href="http://yoursite.com/2015/10/30/Ixd6/"/>
    <id>http://yoursite.com/2015/10/30/Ixd6/</id>
    <published>2015-10-29T16:00:00.000Z</published>
    <updated>2015-12-03T06:16:37.000Z</updated>
    <content type="html"><![CDATA[<p>wecoo是由我负责管理的一个团队共同完成的一个课程设计，这是一款针对小团体的以信息交流为主的轻量级团队协作移动端应用，wecoo取自we cooperate，中文名是微酷，其针对的目标用户也是兴趣团体、学生组织和社团等小团队。摈弃了文件传输、文件共享等等复杂功能之后，轻量化的wecoo更能给小团体增添活力。<a id="more"></a>在整个产品设计过程中，我是负责产品和团队的管理，参与其中每个流程，负责每个环节的落实，而其中我最主要负责的还是线框图、交互设计、原型设计这几个方面。</p>
<p>wecoo是一款轻量级的团队协作应用，因此在功能上我做了特别多的把控，把文件类的功能全部砍掉，因为这一不适合移动端，二不适用小团体。大的团队一般是以文件为主要协作方式，比如我画了原型给设计师，设计师按原型画设计稿，然后再交付给工程师，这一整个流程都是以文件为主，而学生团体、兴趣团体更多是开会、活动、聚餐等等，这是一种以信息为主的协作方式，因此wecoo针对这类目标用户提出了5种信息流：任务、会议、活动、公告、投票，用这5种信息流来作为团队的协作方式。考虑到wecoo的目标用户分为团队管理者和团队成员，因此wecoo增添了贡献度来辅助管理者进行考勤，并且，wecoo对管理者和成员的呈现方式也略为不同，发起信息流的管理者可以对信息内容进行再编辑，也可以更改成员权限或添加新成员，但成员手中的wecoo是看不到这些icon的，因此更不会对其进行操作，所以这样能做到针对不同用户做到不同层次的简化，使得管理者和成员看到的都是针对他们情况的最简产品。同时，wecoo的团队账单增加了团队账务的透明度，会议和活动的盖楼讨论增添了团队的活力，因此wecoo在很多层面考虑了小团队用户的用户体验。并且，我在wecoo的交互上做了很多提升，比如3D Touch的peek的应用，长按日期快速添加的交互应用，利用系统提醒减少深层级操作的交互应用，这使得用户点击即可查看新成员申请、请假信息、完成任务通知等等，这相当于把深层级的页面提前，从而减少用户的操作流程，即使用户不知道那些深层级的页面，也不需要用户学习，这极大的降低用户的认知负担。</p>
<p>这些交互上的体验一张作品集的图片展现不出来，如果大家想看的话，可以点击<a href="http://ursocute.github.io/wecoo/wecoo2/iphone5s.html" target="_blank" rel="external">交互式原型</a>，来查看上述的交互细节和动效设计，如果还想了解具体的设计流程的话，还可以点击下载<a href="http://pan.baidu.com/s/1pJCHvsf" target="_blank" rel="external">源文件</a>。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/Ixd6-1.png" alt="wecoo" title="wecoo"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>wecoo是由我负责管理的一个团队共同完成的一个课程设计，这是一款针对小团体的以信息交流为主的轻量级团队协作移动端应用，wecoo取自we cooperate，中文名是微酷，其针对的目标用户也是兴趣团体、学生组织和社团等小团队。摈弃了文件传输、文件共享等等复杂功能之后，轻量化的wecoo更能给小团体增添活力。]]>
    
    </summary>
    
      <category term="交互" scheme="http://yoursite.com/tags/%E4%BA%A4%E4%BA%92/"/>
    
      <category term="交互" scheme="http://yoursite.com/categories/%E4%BA%A4%E4%BA%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UI.cn iOS 交互设计作品集]]></title>
    <link href="http://yoursite.com/2015/10/18/Ixd5/"/>
    <id>http://yoursite.com/2015/10/18/Ixd5/</id>
    <published>2015-10-17T16:00:00.000Z</published>
    <updated>2015-12-03T06:16:21.000Z</updated>
    <content type="html"><![CDATA[<p>一直很喜欢UI.cn这个网站，有次偶然的机会，我用iPhone的Safari打开UI.cn的时候，发现许多页面并未做成响应式，非常不方便阅读，我再一想，连站酷都有iOS版的，UI中国应该也有iOS版的吧，所以我就跑去App Store里搜，结果什么也没有，这个时候我就萌生了设计UI.cn iOS版的交互原型的想法，做好之后还能放进自己的作品集里。<a id="more"></a></p>
<p>我在深入了解了UI中国之后，发现UI中国是以内容为主、浏览学习为主的一个网站，它同时也提供招聘、 找工作、图书推荐、话题社区等服务，但这类服务多为辅，比如话题社区，整页整页都是0回复，因此考虑了这些因素后，我在做UI.cn iOS版的交互时就着重注意了移动端内容阅读的用户体验，把用户偶尔使用的招聘、私信等等功能都放进了层级稍深的抽屉式导航里。而上传作品、上传经验等功能则全部去掉，因为这些功能一不适合移动端，二对用户来说使用频率也不大，因此去掉反而能使应用更加轻便更加易用。总体来说，我个人还蛮喜欢这样的设计的，大家如果感兴趣的话还可以点击下载<a href="http://pan.baidu.com/s/1jGfH46y" target="_blank" rel="external">源文件</a>看一看。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/Ixd5-psb.png" alt="UI.cn iOS" title="UI.cn iOS"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一直很喜欢UI.cn这个网站，有次偶然的机会，我用iPhone的Safari打开UI.cn的时候，发现许多页面并未做成响应式，非常不方便阅读，我再一想，连站酷都有iOS版的，UI中国应该也有iOS版的吧，所以我就跑去App Store里搜，结果什么也没有，这个时候我就萌生了设计UI.cn iOS版的交互原型的想法，做好之后还能放进自己的作品集里。]]>
    
    </summary>
    
      <category term="交互" scheme="http://yoursite.com/tags/%E4%BA%A4%E4%BA%92/"/>
    
      <category term="交互" scheme="http://yoursite.com/categories/%E4%BA%A4%E4%BA%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[漫生活 交互设计作品集]]></title>
    <link href="http://yoursite.com/2015/10/06/Ixd4/"/>
    <id>http://yoursite.com/2015/10/06/Ixd4/</id>
    <published>2015-10-05T16:00:00.000Z</published>
    <updated>2015-12-03T06:12:49.000Z</updated>
    <content type="html"><![CDATA[<p>想当交互设计师，最近就准备了一下自己的交互设计作品集，也不是很确定作品集具体是要做成什么样子，参考了知乎里<a href="http://www.zhihu.com/question/19977449/answer/48279051" target="_blank" rel="external">「交互设计师的简历和作品集应该怎么做才好」</a>这篇的格式，然后按照一般的设计流程完成了角色创建、功能架构、交互设计这几个方面。<a id="more"></a></p>
<p>这个产品是我自己构想的，是一个以短篇漫画创作为核心的社区型兼工具型的移动应用，App名叫漫生活，用户只需简单几步就可以创作属于自己的短篇漫画，而用户创作出来的作品叫漫书，相同类型相同话题的漫书放在一起形成漫圈。为了降低用户的学习成本，减少用户的创作流程，创作漫书的过程以模板创作为主，自由创作为辅，创作过程还可以随时保存随时预览，非常方便，完成之后会提供多种分享方式，系统还会根据用户选择的模板提供符合的标签，用户勾选后则发布到相应的漫圈中，与漫友形成互动，构成内容-创作的良性循环。因为这款App是社区型兼工具型的应用，而工具型应用变现能力非常有限，因此我着重突显了应用的社区性，在首页的发现、关注里大面积的推广热门的漫圈和漫书，比如及时推出“叶良辰”的模板和“叶良辰”的漫圈，以高质量的漫书内容和新近的热点话题来激发用户的参与欲与创作欲，从而不断的延长产品的生命，增加App的活跃度。我自己认为这是一款挺有意思的构想，大家有兴趣的话可以看一看，如果还想了解具体的角色创建、功能架构和交互设计，可以点击下载<a href="http://pan.baidu.com/s/1dDjVyY9" target="_blank" rel="external">源文件</a>。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/Ixd4-1.jpeg" alt="漫生活" title="漫生活"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>想当交互设计师，最近就准备了一下自己的交互设计作品集，也不是很确定作品集具体是要做成什么样子，参考了知乎里<a href="http://www.zhihu.com/question/19977449/answer/48279051">「交互设计师的简历和作品集应该怎么做才好」</a>这篇的格式，然后按照一般的设计流程完成了角色创建、功能架构、交互设计这几个方面。]]>
    
    </summary>
    
      <category term="交互" scheme="http://yoursite.com/tags/%E4%BA%A4%E4%BA%92/"/>
    
      <category term="交互" scheme="http://yoursite.com/categories/%E4%BA%A4%E4%BA%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的学生生涯就要结束了]]></title>
    <link href="http://yoursite.com/2015/10/02/passage2/"/>
    <id>http://yoursite.com/2015/10/02/passage2/</id>
    <published>2015-10-01T16:00:00.000Z</published>
    <updated>2015-12-03T06:22:49.000Z</updated>
    <content type="html"><![CDATA[<p>我的学生生涯就要结束了。一转眼就大三了，因为专业的原因，大三下整个新闻学院都要出去实习，再加上家里条件又算不上优越，所以我不会选择去读研或者出国，大四就会提前开始奔波找工作，这样算下来，这学期应该是我学生生涯里最后一个学期了。<br><a id="more"></a></p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/passage2-1.jpeg" alt="Campus" title="Campus"></p>
<p>细细想来，大学我虽没宅着打游戏，但也没做什么事。也许参加过几个学生组织，也许和同学旅游过那么几次，也许忙过几个比赛，练过几首曲子，也许因一时兴起尝试过一些领域的知识，也许为了拿奖学金也好好学习过一段时间，但是呢，大学却没有给我留下什么想念，没有遇见喜欢的女孩，没有做出值得怀念的事情。每周我会都回家，不是我念家，而是即使我周末留在学校，仍无事可做。</p>
<p>大学让我见识了很多人，因为成长环境的不同，这里的人有着不同的价值观，消费观，爱情观，也正因如此，找到观念相近的同类很难。我看到过拿着单反用着iPhone计划出国却领取助学金的女生，看到过换男友跟换衣服一样勤跑了个备胎自己却一脸受伤的女孩，看到过天天把约炮挂在嘴边并以此为骄傲的男生，也看到过不用家里一分钱全靠打工挣取生活费的孩子。大学的圈子很多，大学的圈子也很杂，也许你能在某个社团或学生组织找到归属，可这种归属感在我看来不过是特定场合下分泌的化学物质带来的错觉，这种错觉会随着组织的演变而消散，只因同在一个组织的缘故而聚在一起的人不能算真正的同类，因为，就算他们离你再近，要是不能感觉和自己是同一种生物，那么你我是一样的孤独。</p>
<p>大一天真的努力学习拿奖学金，后来才发现某些文科课你努力几个晚上也拼不过那几个爱跟老师搭讪的学生，大一天真的以翘课为耻，后来才意识到在图书馆安静的读一下午书能比得上有些老师讲上一学期，曾努力学习编程尝试入门Java、Objective-C、C++，后来才知道原来自己的智商是有边界的，还曾矫情的在知乎<a href="http://www.zhihu.com/question/21501762/answer/34381075" target="_blank" rel="external">「什么是孤独」</a>的问题下这样回答过：</p>
<blockquote>
<p>他们叫我学霸，在网上膜拜我，可当我拼尽全力好不容易得了第一，却没有一个人当面祝贺我；他们叫我土豪，总叫我请他们去潇洒，可当我拿着一千元音乐会的票时，却找不到一个与我同去的人；他们说我会弹琴，在我个人空间的钢琴视频下频频点赞，却没一个人给我机会让我当面为他演奏；他们说我上台能讲，在台下纷纷鼓掌，却没有一个人意识到，下台后的我始终窝在角落。他们说我的生活品质高，但在我一个人上课，一个人吃饭，一个人练琴，一个去图书馆，一个人去咖啡厅，一个人奔波着的路上，却始终找不到那个与我同行的人。</p>
</blockquote>
<p>然而孤独和孤单并非同义词，有时我会一个人去看电影，两个人去看叫约会，一个人去才叫看电影。我有些奇怪，除开那几个特定的人（煊儿、欢姐、万喆、张鑫、魏绮薇、汤汤等等），要和其他人一起我就会浑身不自在，因为我得不停地考虑对方的感受，想喝什么想吃什么累了困了还是想休息了，都得不停的思考，往往这时候我脑子里都在疯狂的祈祷着“快点让我回去吧！”并且，在更多的时候会因双方观念不同而带来许多麻烦，比如在我看来人均50的餐厅算很便宜了，但考虑到别人我就会选择人均20的餐厅，如果我每次主动付账就会焦虑这样会不会给对方压力，但如果AA的话又会怕对方嫌我选的餐厅太贵，等等这样的情况让我真切的意识到，找到一个观念相近的同类很难。所以我更喜欢一个人，一个人看完电影后可以去Costa买杯咖啡，想吃DQ就排队去吃，想点牛排就自己去点，很自由。</p>
<p>大学我确实有过各种各样的尝试，去琴房练过曲子，发现了自己基础差视奏差这辈子都弹不了某些想弹的曲子，努力学习过，却发现全班交同样的课程设计，老师给有的人就是90+而有的人就80不到，尝试过入门编程，确早早在入门的门前面就发现触到了智商的边界，意识到自己做不了什么很重要，承认自己做不到则需要勇气。然而，正是这样的学生生涯却要结束了。去年上最后一节网球课的时候，老师说这是你们人生最后一堂体育课了，这一学期才发现不知不觉中已经上完了人生中最后一堂大学英语和大学体育，我想我的学生生涯也会这样结束，在还没怎么意识到的时候，就上完了最后一堂课。大三下全院出去找实习，大四会奔波着找工作，大三上就要过去，而我的学生生涯就要结束了。        </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我的学生生涯就要结束了。一转眼就大三了，因为专业的原因，大三下整个新闻学院都要出去实习，再加上家里条件又算不上优越，所以我不会选择去读研或者出国，大四就会提前开始奔波找工作，这样算下来，这学期应该是我学生生涯里最后一个学期了。<br>]]>
    
    </summary>
    
      <category term="文集" scheme="http://yoursite.com/tags/%E6%96%87%E9%9B%86/"/>
    
      <category term="文集" scheme="http://yoursite.com/categories/%E6%96%87%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java实现一个软件工程考试系统]]></title>
    <link href="http://yoursite.com/2015/10/01/java2/"/>
    <id>http://yoursite.com/2015/10/01/java2/</id>
    <published>2015-09-30T16:00:00.000Z</published>
    <updated>2015-10-28T02:40:08.000Z</updated>
    <content type="html"><![CDATA[<p>这学期有门软件工程的双学位的课，老师说结课的大作业要3000行代码，同班的同学有在网上下源码，还有找计算机学院的同学代写的，我不太喜欢让别人代写，自己花6个小时写了800行，大概实现了一个考试系统，虽说中间还靠写题目凑了100多行，但好歹是自己写的，感觉比他们找代写的强得多。<br><a id="more"></a></p>
<pre><code>import java.awt.*;
import java.util.Date;
import java.applet.*;
import java.applet.Applet;
import java.awt.event.*;
import javax.swing.*;
<span class="keyword">class</span> Student{
    <span class="keyword">public</span> <span class="keyword">static</span> String a=<span class="string">"U201317382"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String a1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score1=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String b=<span class="string">"U201317381"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String b1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score2=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String c=<span class="string">"U201317380"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String c1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score3=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String d=<span class="string">"U201317342"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String d1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score4=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String e=<span class="string">"U201317389"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String e1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score5=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String f=<span class="string">"U201317332"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String f1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score6=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String g=<span class="string">"U201317312"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String g1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score7=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String h=<span class="string">"U201317362"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String h1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score8=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String i=<span class="string">"U201317392"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String i1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score9=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String j=<span class="string">"U201317312"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String j1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score10=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String k=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String k1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score11=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String l=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String l1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score12=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String m=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String m1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score13=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String n=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String n1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score14=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String o=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String o1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score15=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String p=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String p1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score16=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String q=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String q1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score17=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String r=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String r1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score18=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String s=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String s1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score19=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String t=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String t1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score20=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String u=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String u1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score21=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String v=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String v1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score22=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String w=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String w1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score23=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String x=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String x1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score24=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String y=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String y1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score25=<span class="number">0</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String z=<span class="string">"U201317322"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String z1=<span class="string">"******"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score26=<span class="number">0</span>;
}

<span class="keyword">class</span> Answer1{
    <span class="keyword">public</span> String[] ans={
    <span class="string">"顶部宽度小"</span>,
    <span class="string">"用户"</span>,
    <span class="string">"经济可行性"</span>,
    <span class="string">"接口说明"</span>,
    <span class="string">"平衡"</span>,
    <span class="string">"任务管理"</span>,
    <span class="string">"数据流"</span>,
    <span class="string">"单继承"</span>,
    <span class="string">"对象"</span>,
    <span class="string">"数据结构"</span>,
    <span class="string">"算法"</span>,
    <span class="string">"公共耦合"</span>,
    <span class="string">"文档"</span>,
    <span class="string">"自顶向下逐步求精"</span>,
    <span class="string">"耦合性与内聚性"</span>
    };
    Answer1(){
    }
    <span class="function"><span class="keyword">public</span> String <span class="title">getAnswer</span><span class="params">(<span class="keyword">int</span> i)</span></span>{
        <span class="keyword">return</span> ans[i];
    } 
}

<span class="keyword">class</span> Question1{
    <span class="keyword">public</span> String[] q={<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span>,<span class="string">"11"</span>,<span class="string">"12"</span>,<span class="string">"13"</span>,<span class="string">"14"</span>,<span class="string">"15"</span>,<span class="string">"16"</span>,<span class="string">"17"</span>,<span class="string">"18"</span>,<span class="string">"19"</span>,<span class="string">"20"</span>,<span class="string">"21"</span>,<span class="string">"22"</span>,<span class="string">"23"</span>,<span class="string">"24"</span>,<span class="string">"25"</span>};
    Question1(){
        q[<span class="number">0</span>]=<span class="string">"1.软件结构的准则有：________，中部宽度最大，底部宽度次之；在结构顶部有较高的扇出数，在底部有较高的扇入数"</span>;
        q[<span class="number">1</span>]=<span class="string">"2.软件工程管理的具体内容包括对开发人员、组织机构、______、文档资料  等方面的管理"</span>;
        q[<span class="number">2</span>]=<span class="string">"3.可行性研究的三个方面是 技术可行性 、社会可行性 和_______"</span>;
        q[<span class="number">3</span>]=<span class="string">"4.在软件概要设计阶段，建立软件结构后，还应为每个模块写一份 处理说明 和_______"</span>;
        q[<span class="number">4</span>]=<span class="string">"5.在画分层的DFD时，父图与子图的输入输出数据流要____"</span>;
        q[<span class="number">5</span>]=<span class="string">"6.开发过程管理包括项目计划、控制和_____等"</span>;
        q[<span class="number">6</span>]=<span class="string">"7.数据字典中有四类条目，分别是___ 、数据项、 数据存储 、基本加工"</span>;
        q[<span class="number">7</span>]=<span class="string">"8.子类只继承一个父类的属性和操作,这称为____"</span>;
        q[<span class="number">8</span>]=<span class="string">"9.喷泉模型是一种以用户需求为动力，以____为驱动的模型。"</span>;
        q[<span class="number">9</span>]=<span class="string">"10.Jackson图不仅可表示程序结构，还可表示_____"</span>;
        q[<span class="number">10</span>]=<span class="string">"11.详细设计的任务是确定每个模块的内部特性，即模块的 _____ 和 数据结构   "</span>;
        q[<span class="number">11</span>]=<span class="string">"12.两个模块都使用同一张表，模块的这种耦合称为____"</span>;
        q[<span class="number">12</span>]=<span class="string">"13.瀑布模型将软件生命期划分为若干阶段，各个阶段之间是通过 _____ 实现过渡的"</span>;
        q[<span class="number">13</span>]=<span class="string">"14.结构化分析方法的分析策略是_________。"</span>;
        q[<span class="number">14</span>]=<span class="string">"15.衡量模块独立性的两个定性标准是_______"</span>;

    }
    <span class="function"><span class="keyword">public</span> String <span class="title">getQuestion</span><span class="params">(<span class="keyword">int</span> i)</span></span>{
        <span class="keyword">return</span> q[i];
    } 
}

<span class="keyword">class</span> Answer{
    <span class="keyword">public</span> String[] ans={<span class="string">"C"</span>,<span class="string">"A"</span>,<span class="string">"C"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>,<span class="string">"D"</span>,<span class="string">"A"</span>,<span class="string">"C"</span>,<span class="string">"B"</span>,<span class="string">"C"</span>,<span class="string">"B"</span>,<span class="string">"D"</span>,<span class="string">"A"</span>,<span class="string">"C"</span>,<span class="string">"D"</span>,<span class="string">"D"</span>,<span class="string">"B"</span>,<span class="string">"A"</span>,<span class="string">"A"</span>,<span class="string">"C"</span>};
    Answer(){
    }
    <span class="function"><span class="keyword">public</span> String <span class="title">getAnswer</span><span class="params">(<span class="keyword">int</span> i)</span></span>{
        <span class="keyword">return</span> ans[i];
    } 
}

<span class="keyword">class</span> Question{
    <span class="keyword">public</span> String[] q={<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span>,<span class="string">"11"</span>,<span class="string">"12"</span>,<span class="string">"13"</span>,<span class="string">"14"</span>,<span class="string">"15"</span>,<span class="string">"16"</span>,<span class="string">"17"</span>,<span class="string">"18"</span>,<span class="string">"19"</span>,<span class="string">"20"</span>,<span class="string">"21"</span>,<span class="string">"22"</span>,<span class="string">"23"</span>,<span class="string">"24"</span>,<span class="string">"25"</span>};
    <span class="keyword">public</span> String[] a1={<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span>,<span class="string">"11"</span>,<span class="string">"12"</span>,<span class="string">"13"</span>,<span class="string">"14"</span>,<span class="string">"15"</span>,<span class="string">"16"</span>,<span class="string">"17"</span>,<span class="string">"18"</span>,<span class="string">"19"</span>,<span class="string">"20"</span>,<span class="string">"21"</span>,<span class="string">"22"</span>,<span class="string">"23"</span>,<span class="string">"24"</span>,<span class="string">"25"</span>};
    <span class="keyword">public</span> String[] b1={<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span>,<span class="string">"11"</span>,<span class="string">"12"</span>,<span class="string">"13"</span>,<span class="string">"14"</span>,<span class="string">"15"</span>,<span class="string">"16"</span>,<span class="string">"17"</span>,<span class="string">"18"</span>,<span class="string">"19"</span>,<span class="string">"20"</span>,<span class="string">"21"</span>,<span class="string">"22"</span>,<span class="string">"23"</span>,<span class="string">"24"</span>,<span class="string">"25"</span>};
    <span class="keyword">public</span> String[] c1={<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span>,<span class="string">"11"</span>,<span class="string">"12"</span>,<span class="string">"13"</span>,<span class="string">"14"</span>,<span class="string">"15"</span>,<span class="string">"16"</span>,<span class="string">"17"</span>,<span class="string">"18"</span>,<span class="string">"19"</span>,<span class="string">"20"</span>,<span class="string">"21"</span>,<span class="string">"22"</span>,<span class="string">"23"</span>,<span class="string">"24"</span>,<span class="string">"25"</span>};
    <span class="keyword">public</span> String[] d1={<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span>,<span class="string">"11"</span>,<span class="string">"12"</span>,<span class="string">"13"</span>,<span class="string">"14"</span>,<span class="string">"15"</span>,<span class="string">"16"</span>,<span class="string">"17"</span>,<span class="string">"18"</span>,<span class="string">"19"</span>,<span class="string">"20"</span>,<span class="string">"21"</span>,<span class="string">"22"</span>,<span class="string">"23"</span>,<span class="string">"24"</span>,<span class="string">"25"</span>};
    <span class="keyword">public</span> String[] c={<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>,<span class="string">"5"</span>,<span class="string">"6"</span>,<span class="string">"7"</span>,<span class="string">"8"</span>,<span class="string">"9"</span>,<span class="string">"10"</span>,<span class="string">"11"</span>,<span class="string">"12"</span>,<span class="string">"13"</span>,<span class="string">"14"</span>,<span class="string">"15"</span>,<span class="string">"16"</span>,<span class="string">"17"</span>,<span class="string">"18"</span>,<span class="string">"19"</span>,<span class="string">"20"</span>,<span class="string">"21"</span>,<span class="string">"22"</span>,<span class="string">"23"</span>,<span class="string">"24"</span>,<span class="string">"25"</span>};
    Question(){
    q[<span class="number">0</span>]=<span class="string">"1.软件设计中划分模块的一个准则是？"</span>;
    a1[<span class="number">0</span>]=<span class="string">"低内聚低耦合"</span>;
    b1[<span class="number">0</span>]=<span class="string">"低内聚高耦合"</span>;
    c1[<span class="number">0</span>]=<span class="string">"高内聚低耦合"</span>;
    d1[<span class="number">0</span>]=<span class="string">"高内聚高耦合"</span>;        

    q[<span class="number">1</span>]=<span class="string">"2.用户和设计交换最频繁的方法是什么？"</span>;
    a1[<span class="number">1</span>]=<span class="string">"原型化方法"</span>;
    b1[<span class="number">1</span>]=<span class="string">"瀑布模型法"</span>;
    c1[<span class="number">1</span>]=<span class="string">"螺旋模型方法"</span>;
    d1[<span class="number">1</span>]=<span class="string">"构件组装模型"</span>;        

    q[<span class="number">2</span>]=<span class="string">"3.结构化程序设计主要强调的是"</span>;
    a1[<span class="number">2</span>]=<span class="string">"程序的规模"</span>;
    b1[<span class="number">2</span>]=<span class="string">"程序的效率"</span>;
    c1[<span class="number">2</span>]=<span class="string">"易读性"</span>;
    d1[<span class="number">2</span>]=<span class="string">"程序语言的先进性"</span>;        

    q[<span class="number">3</span>]=<span class="string">"4.软件工程方法得以实施的主要保证是"</span>;
    a1[<span class="number">3</span>]=<span class="string">"硬件环境"</span>;
    b1[<span class="number">3</span>]=<span class="string">"软件开发的环境"</span>;
    c1[<span class="number">3</span>]=<span class="string">"开发工具和开发环境"</span>;
    d1[<span class="number">3</span>]=<span class="string">"开发人员的素质"</span>;        

    q[<span class="number">4</span>]=<span class="string">"5.下列语言中哪个语言是低级语言"</span>;
    a1[<span class="number">4</span>]=<span class="string">"PASCAL"</span>;
    b1[<span class="number">4</span>]=<span class="string">"VISUAL BASIC"</span>;
    c1[<span class="number">4</span>]=<span class="string">"C++"</span>;
    d1[<span class="number">4</span>]=<span class="string">"汇编语言"</span>;    

    q[<span class="number">5</span>]=<span class="string">"6.模块的内聚性最高的是？"</span>;
    a1[<span class="number">5</span>]=<span class="string">"逻辑内聚 "</span>;
    b1[<span class="number">5</span>]=<span class="string">"偶然内聚"</span>;
    c1[<span class="number">5</span>]=<span class="string">"时间内聚"</span>;
    d1[<span class="number">5</span>]=<span class="string">"功能内聚"</span>;    

    q[<span class="number">6</span>]=<span class="string">"7.使用白盒测试方法时，确定测试数据应根据什么？"</span>;
    a1[<span class="number">6</span>]=<span class="string">"程序的内部逻辑"</span>;
    b1[<span class="number">6</span>]=<span class="string">"程序的复杂程度"</span>;
    c1[<span class="number">6</span>]=<span class="string">"该软件的编辑人员"</span>;
    d1[<span class="number">6</span>]=<span class="string">"程序的功能"</span>;    

    q[<span class="number">7</span>]=<span class="string">"8.软件维护工作的最主要部分是？"</span>;
    a1[<span class="number">7</span>]=<span class="string">"纠正性维护"</span>;
    b1[<span class="number">7</span>]=<span class="string">"适应性维护"</span>;
    c1[<span class="number">7</span>]=<span class="string">"完善性维护"</span>;
    d1[<span class="number">7</span>]=<span class="string">"预防性维护"</span>;    

    q[<span class="number">8</span>]=<span class="string">"9.PDL是什么语言"</span>;
    a1[<span class="number">8</span>]=<span class="string">"高级程序设计语言"</span>;
    b1[<span class="number">8</span>]=<span class="string">"伪码式"</span>;
    c1[<span class="number">8</span>]=<span class="string">"中级程序设计语言"</span>;
    d1[<span class="number">8</span>]=<span class="string">"低级程序设计语言"</span>;    

    q[<span class="number">9</span>]=<span class="string">"10.软件的结构化设计方法分为概要设计和详细设计，详细设计主要是建立?"</span>;
    a1[<span class="number">9</span>]=<span class="string">"软件结构"</span>;
    b1[<span class="number">9</span>]=<span class="string">"软件过程"</span>;
    c1[<span class="number">9</span>]=<span class="string">"软件模型"</span>;
    d1[<span class="number">9</span>]=<span class="string">"软件模块"</span>;    

    q[<span class="number">10</span>]=<span class="string">"11.在数据流图中，○（椭圆）代表？"</span>;
    a1[<span class="number">10</span>]=<span class="string">"数据流"</span>;
    b1[<span class="number">10</span>]=<span class="string">"转换"</span>;
    c1[<span class="number">10</span>]=<span class="string">"数据源"</span>;
    d1[<span class="number">10</span>]=<span class="string">"外部实体"</span>;

    q[<span class="number">11</span>]=<span class="string">"12.总体设计目的是确定整个系统的？"</span>;
    a1[<span class="number">11</span>]=<span class="string">"规模"</span>;
    b1[<span class="number">11</span>]=<span class="string">"测试方案"</span>;
    c1[<span class="number">11</span>]=<span class="string">"费用"</span>;
    d1[<span class="number">11</span>]=<span class="string">"功能及模块结构"</span>;    

    q[<span class="number">12</span>]=<span class="string">"13.检查软件产品是否符合需求定义的过程称为?"</span>;
    a1[<span class="number">12</span>]=<span class="string">"确认测试"</span>;
    b1[<span class="number">12</span>]=<span class="string">"集成测试"</span>;
    c1[<span class="number">12</span>]=<span class="string">"验收测试"</span>;
    d1[<span class="number">12</span>]=<span class="string">"验证测试"</span>;    

    q[<span class="number">13</span>]=<span class="string">"14.在七种偶合中，最低偶合是?"</span>;
    a1[<span class="number">13</span>]=<span class="string">"内容偶合"</span>;
    b1[<span class="number">13</span>]=<span class="string">"公共偶合"</span>;
    c1[<span class="number">13</span>]=<span class="string">"数据偶合"</span>;
    d1[<span class="number">13</span>]=<span class="string">"非直接偶合"</span>;    

    q[<span class="number">14</span>]=<span class="string">"15.以下不属于白盒测试技术的是?"</span>;
    a1[<span class="number">14</span>]=<span class="string">"逻辑覆盖"</span>;
    b1[<span class="number">14</span>]=<span class="string">"基本路径测试"</span>;
    c1[<span class="number">14</span>]=<span class="string">"循环覆盖测试 "</span>;
    d1[<span class="number">14</span>]=<span class="string">"等价类划分"</span>;    

    q[<span class="number">15</span>]=<span class="string">"16.软件的发展经历了几个发展阶段?"</span>;
    a1[<span class="number">15</span>]=<span class="string">"1"</span>;
    b1[<span class="number">15</span>]=<span class="string">"2"</span>;
    c1[<span class="number">15</span>]=<span class="string">"3"</span>;
    d1[<span class="number">15</span>]=<span class="string">"4"</span>;    

    q[<span class="number">16</span>]=<span class="string">"17.需求分析的任务不包括?"</span>;
    a1[<span class="number">16</span>]=<span class="string">"问题分析"</span>;
    b1[<span class="number">16</span>]=<span class="string">"系统设计"</span>;
    c1[<span class="number">16</span>]=<span class="string">"需求描述"</span>;
    d1[<span class="number">16</span>]=<span class="string">"需求评审"</span>;    

    q[<span class="number">17</span>]=<span class="string">"18.从事物的组成部件及每个部件的属性、功能来认识事物的方法被称为?"</span>;
    a1[<span class="number">17</span>]=<span class="string">"面向对象"</span>;
    b1[<span class="number">17</span>]=<span class="string">"面向数据"</span>;
    c1[<span class="number">17</span>]=<span class="string">"面向过程"</span>;
    d1[<span class="number">17</span>]=<span class="string">"面向属性"</span>;    

    q[<span class="number">18</span>]=<span class="string">"19.将软件组装成系统的一种测试技术叫？"</span>;
    a1[<span class="number">18</span>]=<span class="string">"集成测试"</span>;
    b1[<span class="number">18</span>]=<span class="string">"单元测试"</span>;
    c1[<span class="number">18</span>]=<span class="string">"集合测试"</span>;
    d1[<span class="number">18</span>]=<span class="string">"系统测试"</span>;    

    q[<span class="number">19</span>]=<span class="string">"20.技术可行性是可行性研究的关键，其主要内容一般不包括？"</span>;
    a1[<span class="number">19</span>]=<span class="string">"风险分析"</span>;
    b1[<span class="number">19</span>]=<span class="string">"资源分析"</span>;
    c1[<span class="number">19</span>]=<span class="string">"人员分析"</span>;
    d1[<span class="number">19</span>]=<span class="string">"技术分析"</span>;    
    }
    <span class="function"><span class="keyword">public</span> String <span class="title">getQuestion</span><span class="params">(<span class="keyword">int</span> i)</span></span>{
        <span class="keyword">return</span> q[i];
    } 
    <span class="function"><span class="keyword">public</span> String <span class="title">geta1</span><span class="params">(<span class="keyword">int</span> i)</span></span>{
        <span class="keyword">return</span> a1[i];
    } 
    <span class="function"><span class="keyword">public</span> String <span class="title">getb1</span><span class="params">(<span class="keyword">int</span> i)</span></span>{
        <span class="keyword">return</span> b1[i];
    } 
    <span class="function"><span class="keyword">public</span> String <span class="title">getc1</span><span class="params">(<span class="keyword">int</span> i)</span></span>{
        <span class="keyword">return</span> c1[i];
    } 
    <span class="function"><span class="keyword">public</span> String <span class="title">getd1</span><span class="params">(<span class="keyword">int</span> i)</span></span>{
        <span class="keyword">return</span> d1[i];
    } 
}

<span class="keyword">class</span> Window8 extends JFrame implements ActionListener{
    JTextField a = <span class="keyword">new</span> JTextField(<span class="string">"请用Java代码实现两个栈模拟一个队列"</span>);
    JTextField a1 = <span class="keyword">new</span> JTextField(<span class="string">"请用Java代码实现两个队列模拟一个栈"</span>);
    JTextField b = <span class="keyword">new</span> JTextField(<span class="string">""</span>);
    JTextField b1 = <span class="keyword">new</span> JTextField(<span class="string">""</span>);
    JTextField c = <span class="keyword">new</span> JTextField(<span class="string">""</span>);
    JTextField c1 = <span class="keyword">new</span> JTextField(<span class="string">""</span>);
    JPanel up = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">5</span>));
    JPanel middle = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">5</span>));
    JPanel down = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">5</span>));
    JButton ok = <span class="keyword">new</span> JButton(<span class="string">"提交"</span>);
    Window8(){
        getContentPane().setLayout(<span class="keyword">new</span> GridLayout(<span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">5</span>));
        getContentPane().add(up);
        getContentPane().add(middle);
        getContentPane().add(down);
        getContentPane().add(ok);
        up.add(a);
        up.add(a1);
        middle.add(b);
        middle.add(b1);
        down.add(c);
        down.add(c1);
        ok.addActionListener(<span class="keyword">this</span>);
        setSize(<span class="number">440</span>,<span class="number">340</span>);
        setVisible(<span class="literal">true</span>);
        b.setText(Window1.code1);
        b1.setText(Window1.code2);    
        <span class="keyword">int</span> screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;  
        <span class="keyword">int</span> screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;  
        setLocation((screenWidth - <span class="number">200</span>)/<span class="number">2</span>, (screenHeight-<span class="number">200</span>)/<span class="number">2</span>);    
    }
    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>{
        <span class="keyword">if</span> (c.getText().equals(<span class="string">"   "</span>)) {
            JOptionPane.showMessageDialog(null, <span class="string">"请对学生写出的代码进行评分"</span>, <span class="string">"提示"</span>,JOptionPane.PLAIN_MESSAGE);
        }


        <span class="keyword">else</span> <span class="keyword">if</span> (c1.getText().equals(<span class="string">"   "</span>)) {
            JOptionPane.showMessageDialog(null, <span class="string">"请对学生写出的代码进行评分"</span>, <span class="string">"提示"</span>,JOptionPane.PLAIN_MESSAGE);

        }
        <span class="keyword">else</span> {
            <span class="keyword">int</span> i =Integer.parseInt(c1.getText());
            <span class="keyword">int</span> j =Integer.parseInt(c.getText());
            Window1.score+=i;
            Window1.score+=j;
            Student.score1 = Window1.score;
            JOptionPane.showMessageDialog(null, <span class="string">"这位同学的最终得分为"</span>+Window1.score+<span class="string">"分，请点击确定退出程序。"</span>, <span class="string">"提示"</span>,JOptionPane.PLAIN_MESSAGE);
            System.<span class="built_in">exit</span>(<span class="number">0</span>);

        }
    }

}

<span class="keyword">class</span> Window7 extends JFrame implements ActionListener{
    JPanel Account = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">1</span>, <span class="number">2</span>));
    JPanel Code = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">1</span>, <span class="number">2</span>));
    JButton account = <span class="keyword">new</span> JButton(<span class="string">"阅卷老师"</span>);
    JButton code = <span class="keyword">new</span> JButton(<span class="string">"教务密码"</span>);
    JButton atext = <span class="keyword">new</span> JButton(<span class="string">"路松峰老师"</span>);
    JPasswordField ctext = <span class="keyword">new</span> JPasswordField(<span class="string">""</span>);
    Window7(){
        JButton Login = <span class="keyword">new</span> JButton(<span class="string">"点我进入"</span>);
        Account.add(account);
        Account.add(atext);        
        Code.add(code);
        Code.add(ctext);
        getContentPane().setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>, <span class="number">1</span>));
        getContentPane().add(Account);
        getContentPane().add(Code);
        getContentPane().add(Login);    
        Login.addActionListener(<span class="keyword">this</span>);    
        setSize(<span class="number">240</span>,<span class="number">140</span>);
        setVisible(<span class="literal">true</span>);
        <span class="keyword">int</span> screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;  
        <span class="keyword">int</span> screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;  
        setLocation((screenWidth - <span class="number">200</span>)/<span class="number">2</span>, (screenHeight-<span class="number">200</span>)/<span class="number">2</span>);

    }
    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>{
        <span class="keyword">if</span> (ctext.getText().equals(<span class="string">"******"</span>)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window8();

         }

    }

}

<span class="keyword">class</span> Window6 extends JFrame implements ActionListener{
    <span class="keyword">int</span> time = <span class="number">0</span>;
    Question1 x = <span class="keyword">new</span> Question1();
    Answer1 y = <span class="keyword">new</span> Answer1();
    JPanel down = <span class="keyword">new</span> JPanel();
    JTextArea question = <span class="keyword">new</span> JTextArea(<span class="string">"请用Java代码实现两个队列模拟一个栈"</span>);
    JTextArea respond = <span class="keyword">new</span> JTextArea(<span class="string">"请在此处填写代码进行作答"</span>);
    JButton preview = <span class="keyword">new</span> JButton(<span class="string">"上一题"</span>);
    JButton finish = <span class="keyword">new</span> JButton(<span class="string">"交卷"</span>);
    Window6(){
        getContentPane().setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">10</span>));
        getContentPane().add(question);
        getContentPane().add(respond);
        getContentPane().add(down);
        down.add(preview);
        down.add(finish);
        preview.addActionListener(<span class="keyword">this</span>);
        finish.addActionListener(<span class="keyword">this</span>);
        setSize(<span class="number">500</span>,<span class="number">250</span>);
        <span class="keyword">int</span> screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;  
        <span class="keyword">int</span> screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;  
        setLocation((screenWidth - <span class="number">200</span>)/<span class="number">2</span>, (screenHeight-<span class="number">200</span>)/<span class="number">2</span>);
        setVisible(<span class="literal">true</span>);    
    }
    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>{
        Object temp = e.getSource();
        <span class="keyword">if</span> (temp == preview) {
            <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
            <span class="keyword">new</span> Window5();
        }
        <span class="keyword">if</span> (temp == finish) {
            Student.score1 = Window1.score;
            Window1.code2 = respond.getText();
            JOptionPane.showMessageDialog(null, <span class="string">"您目前客观题的得分是"</span>+Window1.score+<span class="string">"，编程题将由老师阅卷后统一给分，考试成绩将3天后由老师进行公布，请您现在带好准考证和随身用品迅速离开考场"</span>, <span class="string">"提示"</span>,JOptionPane.PLAIN_MESSAGE);
            <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
            <span class="keyword">new</span> Window7();
        }
    }
}    

<span class="keyword">class</span> Window5 extends JFrame implements ActionListener{
    <span class="keyword">int</span> time = <span class="number">0</span>;
    Question1 x = <span class="keyword">new</span> Question1();
    Answer1 y = <span class="keyword">new</span> Answer1();
    JPanel down = <span class="keyword">new</span> JPanel();
    JTextArea question = <span class="keyword">new</span> JTextArea(<span class="string">"请用Java代码实现两个栈模拟一个队列"</span>);
    JTextArea respond = <span class="keyword">new</span> JTextArea(<span class="string">"请在此处填写代码进行作答"</span>);
    JButton next = <span class="keyword">new</span> JButton(<span class="string">"下一题"</span>);
    Window5(){
        getContentPane().setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">1</span>,<span class="number">10</span>,<span class="number">10</span>));
        getContentPane().add(question);
        getContentPane().add(respond);
        getContentPane().add(next);
        next.addActionListener(<span class="keyword">this</span>);
        setSize(<span class="number">500</span>,<span class="number">250</span>);
        <span class="keyword">int</span> screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;  
        <span class="keyword">int</span> screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;  
        setLocation((screenWidth - <span class="number">200</span>)/<span class="number">2</span>, (screenHeight-<span class="number">200</span>)/<span class="number">2</span>);
        setVisible(<span class="literal">true</span>);    
    }
    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>{
        Window1.code1 = respond.getText();
        <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
        <span class="keyword">new</span> Window6();
    }
}    


<span class="keyword">class</span> Window4 extends JFrame implements ActionListener{
    <span class="keyword">int</span> time = <span class="number">0</span>;
    Question1 x = <span class="keyword">new</span> Question1();
    Answer1 y = <span class="keyword">new</span> Answer1();
    JPanel down = <span class="keyword">new</span> JPanel();
    JTextArea question = <span class="keyword">new</span> JTextArea(<span class="string">"  "</span>);
    JButton next = <span class="keyword">new</span> JButton(<span class="string">"下一题"</span>);
    JButton previews = <span class="keyword">new</span> JButton(<span class="string">"上一题"</span>);
    JTextArea answer = <span class="keyword">new</span> JTextArea(<span class="string">"     "</span>);
    Window4(){
        String ques = x.getQuestion(time);
        question.setText(ques);
        getContentPane().setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">1</span>));
        getContentPane().add(question);
        getContentPane().add(down);
        down.add(previews);
        down.add(answer);
        down.add(next);
        next.addActionListener(<span class="keyword">this</span>);
        previews.addActionListener(<span class="keyword">this</span>);
        setSize(<span class="number">500</span>,<span class="number">250</span>);
        <span class="keyword">int</span> screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;  
        <span class="keyword">int</span> screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;  
        setLocation((screenWidth - <span class="number">200</span>)/<span class="number">2</span>, (screenHeight-<span class="number">200</span>)/<span class="number">2</span>);
        setVisible(<span class="literal">true</span>);    
    }

    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>{
        Object temp = e.getSource();
        <span class="keyword">if</span> (temp == next) {
            <span class="keyword">if</span> (answer.getText().equals(y.getAnswer(time))) {
                Window1.score+=<span class="number">2</span>;
            }
            <span class="keyword">if</span> (time==<span class="number">14</span>) {
                Object[] options ={ <span class="string">"进入编程题部分"</span>, <span class="string">"再检查一会"</span> };
                <span class="keyword">int</span> m = JOptionPane.showOptionDialog(null, <span class="string">"已经是最后一题了，您可以选择检查一会，或者直接进入编程题部分，注意：进入编程题部分后则无法返回填空题部分！"</span>, <span class="string">"提示"</span>,JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[<span class="number">0</span>]);
                <span class="keyword">if</span>(m==<span class="number">1</span>){

                }
                <span class="keyword">if</span>(m==<span class="number">0</span>){
                    <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window5();
                }

            }
            <span class="keyword">else</span> {
                time++;
                String ques = x.getQuestion(time);
                question.setText(ques);
                answer.setText(<span class="string">"   "</span>);
            }
        }    
        <span class="keyword">if</span> (temp == previews) {
            <span class="keyword">if</span> (time == <span class="number">0</span>) {
                JOptionPane.showMessageDialog(null, <span class="string">"已经是填空题第一题了，您不能返回选择题部分"</span>, <span class="string">"提示"</span>,JOptionPane.ERROR_MESSAGE);

            }
            <span class="keyword">else</span> {
                time--;
                String ques = x.getQuestion(time);
                question.setText(ques);
                answer.setText(<span class="string">"   "</span>);
            }
        }    
    }    

}

<span class="keyword">class</span> Window3 extends JFrame implements ActionListener{
    <span class="keyword">int</span> time = <span class="number">0</span>;
    Question x = <span class="keyword">new</span> Question();
    Answer y = <span class="keyword">new</span> Answer();
    JPanel up = <span class="keyword">new</span> JPanel();
    JPanel middle1 = <span class="keyword">new</span> JPanel();
    JPanel middle2 = <span class="keyword">new</span> JPanel();
    JPanel down = <span class="keyword">new</span> JPanel();
    JTextArea question = <span class="keyword">new</span> JTextArea(<span class="string">" "</span>);
    JButton A = <span class="keyword">new</span> JButton(<span class="string">"A"</span>);
    JButton B = <span class="keyword">new</span> JButton(<span class="string">"B"</span>);
    JButton C = <span class="keyword">new</span> JButton(<span class="string">"C"</span>);
    JButton D = <span class="keyword">new</span> JButton(<span class="string">"D"</span>);
    JButton skip = <span class="keyword">new</span> JButton(<span class="string">"跳过"</span>);
    JTextArea A1 = <span class="keyword">new</span> JTextArea(<span class="string">"        "</span>);
    JTextArea B1 = <span class="keyword">new</span> JTextArea(<span class="string">"        "</span>);
    JTextArea C1 = <span class="keyword">new</span> JTextArea(<span class="string">"        "</span>);
    JTextArea D1 = <span class="keyword">new</span> JTextArea(<span class="string">"        "</span>);
    JButton next = <span class="keyword">new</span> JButton(<span class="string">"下一题"</span>);
    JButton previews = <span class="keyword">new</span> JButton(<span class="string">"上一题"</span>);
    JTextArea answer = <span class="keyword">new</span> JTextArea(<span class="string">"   "</span>);
    Window3(){
        String ques = x.getQuestion(time);
        String a1 = x.geta1(time);
        String b1 = x.getb1(time);
        String c1 = x.getc1(time);
        String d1 = x.getd1(time);
        question.setText(ques);
        A1.setText(a1);
        B1.setText(b1);
        C1.setText(c1);
        D1.setText(d1);
        A.addActionListener(<span class="keyword">this</span>);    
        B.addActionListener(<span class="keyword">this</span>);    
        C.addActionListener(<span class="keyword">this</span>);    
        D.addActionListener(<span class="keyword">this</span>);    
        skip.addActionListener(<span class="keyword">this</span>);    
        next.addActionListener(<span class="keyword">this</span>);    
        previews.addActionListener(<span class="keyword">this</span>);    
        getContentPane().setLayout(<span class="keyword">new</span> GridLayout(<span class="number">4</span>,<span class="number">1</span>));    
        getContentPane().add(up);
        up.add(question);
        getContentPane().add(middle1);
        middle1.add(A);
        middle1.add(A1);
        middle1.add(B);
        middle1.add(B1);
        getContentPane().add(middle2);
        middle2.add(C);
        middle2.add(C1);
        middle2.add(D);
        middle2.add(D1);
        getContentPane().add(down);
        down.add(previews);
        down.add(answer);
        down.add(next);
        setSize(<span class="number">500</span>,<span class="number">250</span>);
        <span class="keyword">int</span> screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;  
        <span class="keyword">int</span> screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;  
        setLocation((screenWidth - <span class="number">200</span>)/<span class="number">2</span>, (screenHeight-<span class="number">200</span>)/<span class="number">2</span>);
        setVisible(<span class="literal">true</span>);        
    }
    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>{
        Object temp = e.getSource();
        <span class="keyword">if</span> (temp == A) {
            answer.setText(<span class="string">"A"</span>);
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (temp == B) {
            answer.setText(<span class="string">"B"</span>);
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (temp == C) {
            answer.setText(<span class="string">"C"</span>);
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (temp == D) {
            answer.setText(<span class="string">"D"</span>);
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (temp == next) {
            <span class="keyword">if</span> (answer.getText().equals(<span class="string">"   "</span>)){

            }
            <span class="keyword">else</span>{
                <span class="keyword">if</span> (answer.getText().equals(y.getAnswer(time))) {
                    Window1.score+=<span class="number">2</span>;
                }
                <span class="keyword">if</span> (time==<span class="number">19</span>) {
                    Object[] options ={ <span class="string">"进入填空题部分"</span>, <span class="string">"再检查一会"</span> };
                    <span class="keyword">int</span> m = JOptionPane.showOptionDialog(null, <span class="string">"已经是最后一题了，您可以选择检查一会，或者直接进入填空题部分，注意：进入填空题部分后就无法返回选择题部分"</span>, <span class="string">"提示"</span>,JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[<span class="number">0</span>]);
                    <span class="keyword">if</span>(m==<span class="number">1</span>){

                    }
                    <span class="keyword">if</span>(m==<span class="number">0</span>){
                        <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                        <span class="keyword">new</span> Window4();
                    }

                }
                <span class="keyword">else</span> {
                    time++;
                    String ques = x.getQuestion(time);
                    String a1 = x.geta1(time);
                    String b1 = x.getb1(time);
                    String c1 = x.getc1(time);
                    String d1 = x.getd1(time);
                    question.setText(ques);
                    A1.setText(a1);
                    B1.setText(b1);
                    C1.setText(c1);
                    D1.setText(d1);
                    answer.setText(<span class="string">"   "</span>);
                }

            }

        }
        <span class="keyword">else</span> <span class="keyword">if</span> (temp == previews) {
            time--;
            String ques = x.getQuestion(time);
            String a1 = x.geta1(time);
            String b1 = x.getb1(time);
            String c1 = x.getc1(time);
            String d1 = x.getd1(time);
            question.setText(ques);
            A1.setText(a1);
            B1.setText(b1);
            C1.setText(c1);
            D1.setText(d1);
        }

    }
}

<span class="keyword">class</span> Window2 extends JFrame implements ActionListener{
    TextArea words = <span class="keyword">new</span> TextArea(<span class="string">"您将参加软件工程机考，请您做好准备，关闭一切通讯设备，此电脑摄像头已经开启，如果发现任何作弊行为或者疑似作弊行为，将立即取消考试资格和考试成绩，并交由教务处进行处分，请不要抱任何侥幸心理，做好准备后，您可以点击开始进入考试，祝您考试愉快。"</span>,<span class="number">1</span>,<span class="number">2</span>,TextArea.SCROLLBARS_VERTICAL_ONLY);

    JButton enter = <span class="keyword">new</span> JButton(<span class="string">"点我开始"</span>);
    Window2(){
        enter.addActionListener(<span class="keyword">this</span>);        
        getContentPane().setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">1</span>));
        getContentPane().add(words);
        getContentPane().add(enter);    
           setSize(<span class="number">370</span>,<span class="number">190</span>);
        <span class="keyword">int</span> screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;  
        <span class="keyword">int</span> screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;  
        setLocation((screenWidth - <span class="number">200</span>)/<span class="number">2</span>, (screenHeight-<span class="number">200</span>)/<span class="number">2</span>);
        setVisible(<span class="literal">true</span>);
    }
    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>{
        <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
        <span class="keyword">new</span> Window3();
    }
}


<span class="keyword">class</span> Window1 extends JFrame implements ActionListener{
    Student a = <span class="keyword">new</span> Student();
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> score=<span class="number">0</span>;    
    <span class="keyword">public</span> <span class="keyword">static</span> String code1 = <span class="string">""</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> String code2 = <span class="string">""</span>;
    JPanel Account = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">1</span>, <span class="number">2</span>));
    JPanel Code = <span class="keyword">new</span> JPanel(<span class="keyword">new</span> GridLayout(<span class="number">1</span>, <span class="number">2</span>));
    JButton account = <span class="keyword">new</span> JButton(<span class="string">"学号"</span>);
    JButton code = <span class="keyword">new</span> JButton(<span class="string">"密码"</span>);
    JTextField atext = <span class="keyword">new</span> JTextField(<span class="string">""</span>);
    JPasswordField ctext = <span class="keyword">new</span> JPasswordField(<span class="string">""</span>);
    Window1(){
        JButton Login = <span class="keyword">new</span> JButton(<span class="string">"点我进入"</span>);
        Account.add(account);
        Account.add(atext);        
        Code.add(code);
        Code.add(ctext);
        getContentPane().setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>, <span class="number">1</span>));
        getContentPane().add(Account);
        getContentPane().add(Code);
        getContentPane().add(Login);    
        Login.addActionListener(<span class="keyword">this</span>);    
        setSize(<span class="number">240</span>,<span class="number">140</span>);
        setVisible(<span class="literal">true</span>);
        <span class="keyword">int</span> screenWidth = Toolkit.getDefaultToolkit().getScreenSize().width;  
        <span class="keyword">int</span> screenHeight = Toolkit.getDefaultToolkit().getScreenSize().height;  
        setLocation((screenWidth - <span class="number">200</span>)/<span class="number">2</span>, (screenHeight-<span class="number">200</span>)/<span class="number">2</span>);

    }
    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{
        <span class="keyword">new</span> Window1();    

    }
    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>{
         <span class="keyword">if</span> (atext.getText().equals(a.a)&amp;&amp;ctext.getText().equals(a.a1)) {
             <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
            <span class="keyword">new</span> Window2();    
          }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.b)&amp;&amp;ctext.getText().equals(a.b1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.c)&amp;&amp;ctext.getText().equals(a.c1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.d)&amp;&amp;ctext.getText().equals(a.d1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.e)&amp;&amp;ctext.getText().equals(a.e1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.f)&amp;&amp;ctext.getText().equals(a.f1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.g)&amp;&amp;ctext.getText().equals(a.g1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.h)&amp;&amp;ctext.getText().equals(a.h1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.i)&amp;&amp;ctext.getText().equals(a.i1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.j)&amp;&amp;ctext.getText().equals(a.j1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.k)&amp;&amp;ctext.getText().equals(a.k1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.l)&amp;&amp;ctext.getText().equals(a.l1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.m)&amp;&amp;ctext.getText().equals(a.m1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.n)&amp;&amp;ctext.getText().equals(a.n1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.o)&amp;&amp;ctext.getText().equals(a.o1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.p)&amp;&amp;ctext.getText().equals(a.p1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.q)&amp;&amp;ctext.getText().equals(a.q1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.r)&amp;&amp;ctext.getText().equals(a.r1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.s)&amp;&amp;ctext.getText().equals(a.s1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.t)&amp;&amp;ctext.getText().equals(a.t1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.u)&amp;&amp;ctext.getText().equals(a.u1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.v)&amp;&amp;ctext.getText().equals(a.v1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.w)&amp;&amp;ctext.getText().equals(a.w1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.x)&amp;&amp;ctext.getText().equals(a.x1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.y)&amp;&amp;ctext.getText().equals(a.y1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (atext.getText().equals(a.z)&amp;&amp;ctext.getText().equals(a.z1)) {
                     <span class="keyword">this</span>.setVisible(<span class="literal">false</span>);
                    <span class="keyword">new</span> Window2();    
        }
        <span class="keyword">else</span> <span class="keyword">if</span> (!atext.getText().equals(a.a)) {
            JOptionPane.showMessageDialog(null, <span class="string">"学号不存在，请重新输入"</span>);

        }
        <span class="keyword">else</span> <span class="keyword">if</span> ((atext.getText().equals(a.b)||atext.getText().equals(a.c)||atext.getText().equals(a.d)||atext.getText().equals(a.e)||atext.getText().equals(a.f)||atext.getText().equals(a.g)||atext.getText().equals(a.h)||atext.getText().equals(a.i)||atext.getText().equals(a.j)||atext.getText().equals(a.k)||atext.getText().equals(a.l)||atext.getText().equals(a.m)||atext.getText().equals(a.n)||atext.getText().equals(a.o)||atext.getText().equals(a.p)||atext.getText().equals(a.q)||atext.getText().equals(a.r)||atext.getText().equals(a.s)||atext.getText().equals(a.t)||atext.getText().equals(a.u)||atext.getText().equals(a.v)||atext.getText().equals(a.w)||atext.getText().equals(a.x)||atext.getText().equals(a.y)||atext.getText().equals(a.z))) {
            JOptionPane.showMessageDialog(null, <span class="string">"学号不存在，请重新输入"</span>);
        }
        <span class="keyword">else</span> {
            JOptionPane.showMessageDialog(null, <span class="string">"学号密码错误，请重新输入"</span>);  
        }
    }
} 
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>这学期有门软件工程的双学位的课，老师说结课的大作业要3000行代码，同班的同学有在网上下源码，还有找计算机学院的同学代写的，我不太喜欢让别人代写，自己花6个小时写了800行，大概实现了一个考试系统，虽说中间还靠写题目凑了100多行，但好歹是自己写的，感觉比他们找代写的强得多。<br>]]>
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="代码" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[第一次实习的一点小感想]]></title>
    <link href="http://yoursite.com/2015/09/28/passage1/"/>
    <id>http://yoursite.com/2015/09/28/passage1/</id>
    <published>2015-09-27T16:00:00.000Z</published>
    <updated>2015-12-03T06:21:28.000Z</updated>
    <content type="html"><![CDATA[<p>今年暑期在Geetest实习了2个月，担任的是产品经理的岗位，感想还蛮多的，因为之前都是在书上和网上自己了解一些互联网产品相关的知识，而真正投身其中之后，才发现自己还有好多需要学习的地方。</p>
<a id="more"></a>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/passage-1.jpeg" alt="geetest" title="geetest"></p>
<p>再记录下工作，这两个月我主要工作有：</p>
<p>1.负责微信H5游戏推广项目的原型制作，交互图绘制，PRD撰写，及整个项目的跟进</p>
<p>2.负责新版官网feedback页面的原型制作与交互图绘制，以及整个项目的跟进</p>
<p>3.负责Geetest文档中心页面的原型制作与交互图绘制，以及整个项目的跟进</p>
<p>4.负责safe center页面的原型制作与交互图绘制，以及整个项目的跟进</p>
<p>5.负责安装文档中FAQ的整理与撰写</p>
<p>6.负责移动端官网的原型制作与交互图绘制，以及整个项目的跟进</p>
<p>7.参与官网改版的头脑风暴</p>
<p>8.参与新版后台上线前的功能点测试，以及修改的跟进</p>
<p>9.参与g-vote上线前的功能点测试，以及修改的跟进</p>
<p>10.参与新版官网上线前的功能点测试，以及修改的跟进</p>
<p>11.负责g-vote应用logo的设计</p>
<p>12.负责java版极验验证安装教程的撰写与投放</p>
<p>13.参与验证产品的黑盒测试</p>
<p>最后来谈谈对产品的认识。</p>
<p>Geetest的产品是极验验证，是一种基于行为验证的新型验证码技术，这种新型验证技术以行为验证增加用户体验，以后台的行为判别算法、图像加密等策略增加其安全性，从而达到体验与安全共赢的局面。而我就是以该产品为核心来做各种针对性的项目。一开始是写写PRD做做原型，测试下功能点，做做黑盒测试，后来也开始参与头脑风暴，跟进好几个项目，没事和设计与技术聊聊天，了解一些当今流行的设计风格或技术趋势，收获还蛮大的。</p>
<p>首先在做原型方面就有收获。既然是产品岗，就不需要做高保真原型，否则抢设计的活儿干嘛？原来我喜欢使用动态面板，实习了才发现，动态面板其实并不适合与设计交接，相对于动态面板，多做页面反而更容易让设计理解。当时做微信H5游戏推广项目的原型的时候，我就用了许多动态面板，但产品总监就指出这样不方便设计理解，当时我没注意，可就在做移动端官网原型的时候，设计就因为没有注意我动态面板中的一个状态，导致设计稿交付有了缺失，从而延误了整个流程，因而这件事也让我明白，用axure制作原型的话，页面相比动态面板要更有效。</p>
<p>对于产品岗来说，想法更重要。按钮摆哪儿，Hover态做成什么样的，哪些页面需要footer，设计风格要怎样的，不同位置的文案怎么写，配图还是动画，技术好不好实现，不能实现怎么折中处理，等等等等的细节都需要考虑清楚考虑全面，有时候多加一个按钮，少一行文字，都会产生不同程度的利弊，这时候就要好好权衡之后再做决定，权衡好什么利更有利，什么弊可以先放着不管。在参加官网改版的头脑风暴时，我就发现产品需要考虑的细节非常之多，排版、色彩、动画时长、动画定格帧、甚至设计风格，都需要我们产品去仔细斟酌再做出决定，这样针对细节的充分考虑，更能保证产品质量，不容易导致技术和产品做出的东西差别过大。</p>
<p>产品有时候还要兼项目经理的工作，切不可把原型一交就了事，要不断的跟进项目，去督促设计监督技术，设计有时候并不完全按照原型画图，可能会画的更好看，但可能会牺牲一些产品层面的体验，这时候就需要pm和设计好好交流，说清楚为什么要这样做而不能那样做，讨论之后再得出最终结果。在和技术交接的时候更是如此，有时候技术做出来的东西和设计画的图会是两码事，什么字体，什么字号，什么颜色，是否做成响应式，都需要去督促技术去注意，因为技术很可能更在意怎么在代码层面实现，对于一些设计上的细节可能不太重视，这时候就需要pm去督促，决定好优先级，当技术并不完全按照设计稿或原型来实现时，就需要产品提前多督促监督，否则等产品做出来了再修改就耗时耗力了。</p>
<p>产品要学会和适合的人说适合的话，和设计探讨可以聊聊配色、整体设计风格，和技术聊的话就多从实现难度，实现时长，实现的优先级等方面聊，如果懂技术也可以聊聊实现方法，但如果不懂千万别瞎指挥，多站在对方的角度上来说话，会让工作流畅很多。当有争论点时，切不可独裁式的下定论，比如“用户就喜欢这样的”，“你不管，就这样做就行”，“照着这个做就好”，这些话不仅暴露出自己是新手，同时也增加了沟通中的不愉快感，面对争论，首先需要仔细思考，实实在在的说出对方思考上的不足，以及自己想法的优点，这样观点才更容易让设计或技术去接受。</p>
<p>产品要是稍微会点设计或技术，可以很大的加快工作进度。在整理安装文档的FAQ的时候，平台部的程序员就稍微教了下我怎么用sublime text，学会了之后再帮他们整理FAQ就节省了很多工作量。在测试官网功能点的时候发现移动场景展示的二维码有误，可惜设计刚好请了假，我就在设计原图的基础上用sketch稍微改了改，再交给前端，从而很好的解决了问题。在gvote应用测试完成后，发现缺了discuz的应用logo，正巧设计都很忙，我就自己用sketch设计了一个logo，最后被采纳的也是我这个logo设计，节省了整个工作流程。所以产品会点设计或技术可以给他加不少分。</p>
<p>产品还要学会多找技术和设计帮忙，只要关系处的融洽，设计和技术都会很热情的伸出援手的。在我撰写Java版的极验验证安装教程时，由于截图安装步骤需要搭建Eclipse+Tomcat的开发环境，而针对mac的Eclipse+Tomcat的开发环境的搭建挺麻烦的，因此我找了公司程序员帮忙，没想到他们非常热情，不仅把开发环境搭建好了，还把整个安装的过程详尽的解释给我听了，从而我顺利的写出了java版的极验验证安装教程，并成功投放到了CSDN技术博客上。</p>
<p>在参与功能点测试的时候，产品不仅仅是要找出有问题的地方，更要针对问题做优先级处理，有的是功能性bug，则需要优先处理，而有些只会影响体验，不影响用户使用流程，这类问题就可以稍微延后，切不可一发现问题就去找开发，这样不仅效率低，也影响开发人员的心情，最好是把问题集中起来，按照优先级一并交付给开发，这样不仅增加效率，又不至于使开发厌烦。</p>
<p>公司采用的制度模式是OKR，这更容易将各个任务落实到个人，但公司产品开发的模式是敏捷开发，没有严密的PRD和项目审核，就会导致氛围较为松散，所以一旦ORK落实不到个人的时候，往往就会产生项目延误，这也是一个需要解决的问题，OKR本是一个很棒的制度，但要是执行得不好就会形同虚设，所以只有把OKR执行到底才能发挥OKR的最大作用。</p>
<p>这些就是我在实习产品经理得到的收获，在实习过程中，让我惊喜的不仅是产品岗本身带来的成就感与认同感，更让我惊喜的是互联网公司轻松愉快的氛围，公司每天的零食架堆满零食，可以随意自取，咖啡机，制冰机，磨豆机应有尽有，各类冰饮也能随意拿取，公司还有桌上足球，乒乓球台，还有台连接投影仪的PS4，公司里不分上下都能拿起手柄对战一局，即使是CEO也常参与战局，不会有任何等级之分，2个月的实习光产品部就聚会了5次，相比事业单位的拘谨约束，由年轻人聚集而成的互联网公司充满了具有时代感的朝气与活力，这也是我比较想投身互联网行业的原因，我对产品有兴趣，未来想做产品经理，我感觉自己对产品的细节更敏感一些，而对产品的大局观的谋略比较欠缺，这是需要努力的地方。不过我对设计也挺有兴趣，特别是交互设计，我也挺想做一名交互设计师的。</p>
<p>最后谢谢阿汤，国庆，丸子，钱聪，博士，York，智勇，宇哥，许伟，赵鑫晖，钉子，还有月月！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今年暑期在Geetest实习了2个月，担任的是产品经理的岗位，感想还蛮多的，因为之前都是在书上和网上自己了解一些互联网产品相关的知识，而真正投身其中之后，才发现自己还有好多需要学习的地方。</p>]]>
    
    </summary>
    
      <category term="产品" scheme="http://yoursite.com/tags/%E4%BA%A7%E5%93%81/"/>
    
      <category term="文集" scheme="http://yoursite.com/tags/%E6%96%87%E9%9B%86/"/>
    
      <category term="文集" scheme="http://yoursite.com/categories/%E6%96%87%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[唯品会是怎么把我妈变成一名剁手党的]]></title>
    <link href="http://yoursite.com/2015/09/24/product1/"/>
    <id>http://yoursite.com/2015/09/24/product1/</id>
    <published>2015-09-23T16:00:00.000Z</published>
    <updated>2015-12-03T12:01:22.000Z</updated>
    <content type="html"><![CDATA[<p>真正开始关注唯品会得从我妈说起，我妈算是互联网的轻度用户，之前虽说也给我妈下载了淘宝和京东，但网购对我妈来说一直没有太大吸引力，可突然有一天起，我发现我家快递就没停过，每周最少收3次，每次她不在家都是让我去代签，而包裹上全是这大大的三个字-唯品会。所以这个时候我才开始关注，唯品会是怎么把我妈变成一名剁手党的。<br><a id="more"></a></p>
<p>首先我就观察我妈是怎么使用唯品会这款App的，我妈开始刷唯品会的时候，我就在一旁看，时不时问几句引导一下，我问我妈：“平时你都看些什么呀？”我妈就一边用手左右滑动切换标签一边说：“就看看上面（标签导航）这些啊。”我看我妈逛完了专场，退回主页面之后，我又问：“你平时点不点左上角的这个按钮呢？”我妈瞄了一眼，说：“很少点。”“那点过没有呢？”“没有吧，我平时都不点那里。”</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product1-1.png" alt="唯品会主页面" title="唯品会主页面"></p>
<p>大家看，这是我截图的一张最新版本唯品会的主页面，左上角的抽屉式导航其实是分类商品的入口，比如<strong><em>服饰、男士、母婴、美妆、居家、海外精选、汽车</em></strong>这些，然而我妈却从没点过。但我爸则恰恰相反，之前我妈给我爸强烈安利唯品会这款App，我爸下载试用了一下却怨声载道，只因他点了左上角分类导航之后发现不能精确搜索，然后就很生气的说：“它怎么连搜索都没有啊，一点都不好用。”一气之下就卸载了。（当唯品会App还没有上图右上角的搜索按钮）</p>
<p>通过观察我爸和我妈对唯品会的不同反应，我就意识到，唯品会的产品经理很聪明，他其实是故意弱化搜索功能的，而我爸之所以会怨声载道，根本原因在于，我爸就不是唯品会的目标用户。</p>
<p>唯品会是以专场的形式为基本单元让用户进行购物的，如上图主页面里，大大的图片显示的全是各大品牌或服饰的专场，下图新增加的搜索里也全是各大品牌专场，这其实恰恰符合了女性的购物心理，非精确购物。女性在购物时，绝大多数情况都不是精确购买，女性喜欢逛街，而逛街最重要的就落在了这个“逛”字上，这边看一看那边瞧一瞧，而唯品会专场的形式正是符合了女性逛街中“逛”的需求，看完衣服再看看鞋子，看完鞋子再看看包包，而逛的过程中就不知不觉增加了一个又一个订单。而我爸对这些专场的东西完全不感兴趣，我爸喜欢电子产品，上来就开始搜单反相机，结果搜了半天也没搜出个结果，一气之下就把唯品会卸载了，而我爸和我妈差别如此之大的根本原因，就在于男女购物习惯的差别。我爸喜欢精确购买，而我妈喜欢逛街，而唯品会正是看清了这一点，优先切合了女性的购物习惯，着重满足了女性的这一购物需求，而至于我爸呢，唯品会则是很巧妙的过滤掉了非潜在用户，而把重心完全放在了目标用户上。</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product1-2.png" alt="唯品会的专场与搜索" title="唯品会的专场与搜索"></p>
<p>不仅有专场这一巧妙的设置，从主页中还可以看到，每一个专场都有打折和剩余时间的标志。打折、限时、限购，这些对于女性一样有着极大的杀伤力，许多女性对于限时打折什么的完全没有抵抗力，这就利用了人们非理性的一面，用打折、限时来刺激人们进行冲动购买，买了就算不喜欢还能退货，但只要犹豫一下就再买不着了，一次买不着就后悔好几天，下次也就再也不手软了。点了专场某一件衣服之后，还会有原价、折后价、剩余时间的标志，唯品会通过这些来反复刺激用户，使用户趁着冲动进行抢购，也难怪我妈炒菜炒到一半突然拿起手机开始喊：“开抢啦！开抢啦！”</p>
<p><img src="http://7xohes.com1.z0.glb.clouddn.com/product1-3.png" alt="唯品会的单品与开售提醒" title="唯品会的单品与开售提醒"></p>
<p>唯品会还把每次的限时打折专场提前告知用户，好比就在说：“我们今晚8点半开抢，抢不到就没有了哦。”我妈看到就赶紧在后面跟着喊：“我要来抢！我要来抢！”这种让用户主动选择提前告知限时打折专场的设置确实巧妙，化被动为主动，让用户主动的来陷入专场“迷雾”，同时还进一步增加了专场的影响力，增强用户的粘性。我想，唯品会就是这样一步步将我妈变成一名剁手党的。而面对唯品会，我只能说：“我叶良辰，佩服佩服！”</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>真正开始关注唯品会得从我妈说起，我妈算是互联网的轻度用户，之前虽说也给我妈下载了淘宝和京东，但网购对我妈来说一直没有太大吸引力，可突然有一天起，我发现我家快递就没停过，每周最少收3次，每次她不在家都是让我去代签，而包裹上全是这大大的三个字-唯品会。所以这个时候我才开始关注，唯品会是怎么把我妈变成一名剁手党的。<br>]]>
    
    </summary>
    
      <category term="产品" scheme="http://yoursite.com/tags/%E4%BA%A7%E5%93%81/"/>
    
      <category term="产品" scheme="http://yoursite.com/categories/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[格志动效设计 by Hype]]></title>
    <link href="http://yoursite.com/2015/09/20/Ixd3/"/>
    <id>http://yoursite.com/2015/09/20/Ixd3/</id>
    <published>2015-09-19T16:00:00.000Z</published>
    <updated>2015-12-02T15:00:47.000Z</updated>
    <content type="html"><![CDATA[<p>用Hype临摹了格志的两个切换动效。格志的交互可以算得上有趣，它是通过上下滑动来进行切换，虽说需要一定的学习成本，但对于学习后的用户来说可以大大增加其切换效率，也提升了用户体验，动效里也蕴含着隐喻在其中，一定程度的降低了用户的学习成本，对于爱用手机记录生活的人来说是个不错的选择。<a id="more"></a></p>
<h5 id="格志_向下滑动切换动效">格志 向下滑动切换动效</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/Ixd3-1.gif" alt="格志 向下滑动切换动效" title="格志 向下滑动切换动效"></p>
<h5 id="格志_向上滑动切换动效">格志 向上滑动切换动效</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/Ixd3-2.gif" alt="格志 向上滑动切换动效" title="格志 向上滑动切换动效"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>用Hype临摹了格志的两个切换动效。格志的交互可以算得上有趣，它是通过上下滑动来进行切换，虽说需要一定的学习成本，但对于学习后的用户来说可以大大增加其切换效率，也提升了用户体验，动效里也蕴含着隐喻在其中，一定程度的降低了用户的学习成本，对于爱用手机记录生活的人来说是个不错的选择。]]>
    
    </summary>
    
      <category term="交互" scheme="http://yoursite.com/tags/%E4%BA%A4%E4%BA%92/"/>
    
      <category term="动效" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%95%88/"/>
    
      <category term="交互" scheme="http://yoursite.com/categories/%E4%BA%A4%E4%BA%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS动效设计 by Hype]]></title>
    <link href="http://yoursite.com/2015/09/18/Ixd2/"/>
    <id>http://yoursite.com/2015/09/18/Ixd2/</id>
    <published>2015-09-17T16:00:00.000Z</published>
    <updated>2015-12-02T14:59:01.000Z</updated>
    <content type="html"><![CDATA[<p>用Hype临摹了iOS9的几个简单动效。基本上用的都是大小、位置、透明度的改变，曲线用的是渐进渐出和弹性，还有时间的调整。就我感觉而言，Hype做动效是很方便快捷的，但是对于一些复杂的动效，比如形变等，还是需要AE来完成比较好，不过这并不妨碍Hype成为一款H5的动效神器。<a id="more"></a></p>
<h5 id="iOS9_多窗口弹出动效">iOS9 多窗口弹出动效</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/Ixd2-1.gif" alt="iOS9 多窗口动效" title="iOS9 多窗口弹出动效"></p>
<h5 id="iOS9_多窗口切换动效">iOS9 多窗口切换动效</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/Ixd2-2.gif" alt="iOS9 多窗口动效" title="iOS9 多窗口切换动效"></p>
<h5 id="iOS9_底部View进入App动效">iOS9 底部View进入App动效</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/Ixd2-3.gif" alt="iOS9 底部View进入App动效" title="iOS9 底部View进入App动效"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>用Hype临摹了iOS9的几个简单动效。基本上用的都是大小、位置、透明度的改变，曲线用的是渐进渐出和弹性，还有时间的调整。就我感觉而言，Hype做动效是很方便快捷的，但是对于一些复杂的动效，比如形变等，还是需要AE来完成比较好，不过这并不妨碍Hype成为一款H5的动效神器。]]>
    
    </summary>
    
      <category term="交互" scheme="http://yoursite.com/tags/%E4%BA%A4%E4%BA%92/"/>
    
      <category term="动效" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%95%88/"/>
    
      <category term="交互" scheme="http://yoursite.com/categories/%E4%BA%A4%E4%BA%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[两个动效设计 by Hype]]></title>
    <link href="http://yoursite.com/2015/08/30/Ixd1/"/>
    <id>http://yoursite.com/2015/08/30/Ixd1/</id>
    <published>2015-08-29T16:00:00.000Z</published>
    <updated>2015-12-02T14:56:05.000Z</updated>
    <content type="html"><![CDATA[<p>Hype是Mac平台独占的一款动效神器，这款软件和Sketch一样深得我心，之前我也尝试过Framer Studio这款交互利器，但我认为Framer对设计师并不友好，过多的代码影响效率不说，也让设计师不能专注于设计本身，而相比之下Hype则简洁易用得多，所以在这里展示两个Hype做的简单动效，显示一下Hype的强大能力。动效和交互并不完全是一个东西，但动效和交互也有交集，因此这里还是归类到交互里。<a id="more"></a></p>
<h5 id="UI-cn_iOS_抽屉式动效">UI.cn iOS 抽屉式动效</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/Ixd11.gif" alt="UI.cn iOS 抽屉式导航" title="UI.cn iOS 抽屉式动效"></p>
<h5 id="豆瓣阅读_点击书本动效">豆瓣阅读 点击书本动效</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/Ixd12.gif" alt="豆瓣阅读 点击书本动效" title="豆瓣阅读 点击书本动效"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hype是Mac平台独占的一款动效神器，这款软件和Sketch一样深得我心，之前我也尝试过Framer Studio这款交互利器，但我认为Framer对设计师并不友好，过多的代码影响效率不说，也让设计师不能专注于设计本身，而相比之下Hype则简洁易用得多，所以在这里展示两个Hype做的简单动效，显示一下Hype的强大能力。动效和交互并不完全是一个东西，但动效和交互也有交集，因此这里还是归类到交互里。]]>
    
    </summary>
    
      <category term="交互" scheme="http://yoursite.com/tags/%E4%BA%A4%E4%BA%92/"/>
    
      <category term="动效" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%95%88/"/>
    
      <category term="交互" scheme="http://yoursite.com/categories/%E4%BA%A4%E4%BA%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UI临摹汇总 by Sketch]]></title>
    <link href="http://yoursite.com/2015/07/27/UI1/"/>
    <id>http://yoursite.com/2015/07/27/UI1/</id>
    <published>2015-07-26T16:00:00.000Z</published>
    <updated>2015-12-11T09:22:41.000Z</updated>
    <content type="html"><![CDATA[<p>最近喜欢上了一款Mac平台的画UI的应用-Sketch，操作十分简单，但功能一点也不逊色，能让设计师更专注于设计本身，而不是软件的使用。这几天我就用Sketch临摹了自己喜欢的几幅UI，大多是扁平化的风格，也有像素风，其中配色、阴影、点和线条的运用都很值得学习，就放在博客里记录一下自己这几天的临摹作品。<br><a id="more"></a></p>
<h5 id="Cute_Gril">Cute Gril</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/ui-10.png" alt="Cute Gril" title="Cute Gril"></p>
<h5 id="Mactonish">Mactonish</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/ui-1.png" alt="Mactonish" title="Mactonish"></p>
<h5 id="Santa_Postage">Santa Postage</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/ui-2.png" alt="Santa Postage" title="Santa Postage"></p>
<h5 id="中秋节">中秋节</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/ui-3.png" alt="中秋节" title="中秋节"></p>
<h5 id="青年节">青年节</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/ui-4.png" alt="青年节" title="青年节"></p>
<h5 id="Bureau">Bureau</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/ui-5.png" alt="Bureau" title="Bureau"></p>
<h5 id="Decoration">Decoration</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/ui-6.png" alt="Decoration" title="Decoration"></p>
<h5 id="Drink">Drink</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/ui-7.png" alt="Drink" title="Drink"></p>
<h5 id="Baymax_say_hi">Baymax say hi</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/ui-8.png" alt="Baymax say hi" title="Baymax say hi"></p>
<h5 id="Baymax_pokes_belly">Baymax pokes belly</h5><p><img src="http://7xohes.com1.z0.glb.clouddn.com/ui-9.png" alt="Baymax pokes belly" title="Baymax pokes belly"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近喜欢上了一款Mac平台的画UI的应用-Sketch，操作十分简单，但功能一点也不逊色，能让设计师更专注于设计本身，而不是软件的使用。这几天我就用Sketch临摹了自己喜欢的几幅UI，大多是扁平化的风格，也有像素风，其中配色、阴影、点和线条的运用都很值得学习，就放在博客里记录一下自己这几天的临摹作品。<br>]]>
    
    </summary>
    
      <category term="UI" scheme="http://yoursite.com/tags/UI/"/>
    
      <category term="UI" scheme="http://yoursite.com/categories/UI/"/>
    
  </entry>
  
</feed>
